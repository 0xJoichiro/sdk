# This file was @generated by cargo2nix 0.8.3.
# It is not intended to be manually edited.

{ release ? true
, rootFeatures ? [
    "dfx/default"
  ]
, rustPackages
, buildRustPackages
, hostPlatform
, hostPlatformCpu ? null
, hostPlatformFeatures ? []
, mkRustCrate
, rustLib
, lib
,
}:
let
  inherit (rustLib) fetchCratesIo fetchCrateLocal fetchCrateGit fetchCrateAlternativeRegistry expandFeatures decideProfile genDrvsByProfile;
  profilesByName = {};
  rootFeatures' = expandFeatures rootFeatures;
  overridableMkRustCrate = f:
    let
      drvs = genDrvsByProfile profilesByName ({ profile, profileName }: mkRustCrate ({ inherit release profile hostPlatformCpu hostPlatformFeatures; } // (f profileName)));
    in
      { compileMode ? null, profileName ? decideProfile compileMode release }:
        let drv = drvs.${profileName}; in if compileMode == null then drv else drv.override { inherit compileMode; };
in
{
  cargo2nixVersion = "0.8.3";
  workspace = {
    dfx = rustPackages.unknown.dfx."0.6.8";
  };
  "registry+https://github.com/rust-lang/crates.io-index".actix."0.9.0" = overridableMkRustCrate (
    profileName: rec {
      name = "actix";
      version = "0.9.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a4af87564ff659dee8f9981540cac9418c45e910c8072fdedd643a262a38fcaf"; };
      features = builtins.concatLists [
        [ "actix-http" ]
        [ "default" ]
        [ "http" ]
        [ "resolver" ]
        [ "trust-dns-proto" ]
        [ "trust-dns-resolver" ]
      ];
      dependencies = {
        actix_http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-http."1.0.1" { inherit profileName; };
        actix_rt = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-rt."1.1.1" { inherit profileName; };
        actix_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".actix_derive."0.5.0" { profileName = "__noProfile"; };
        bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
        bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."0.5.6" { inherit profileName; };
        crossbeam_channel = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-channel."0.4.3" { inherit profileName; };
        derive_more = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".derive_more."0.99.9" { profileName = "__noProfile"; };
        futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.3.5" { inherit profileName; };
        lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
        log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
        parking_lot = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.10.2" { inherit profileName; };
        pin_project = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project."0.4.23" { inherit profileName; };
        smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.4.2" { inherit profileName; };
        tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."0.2.22" { inherit profileName; };
        tokio_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-util."0.2.0" { inherit profileName; };
        trust_dns_proto = rustPackages."registry+https://github.com/rust-lang/crates.io-index".trust-dns-proto."0.18.0-alpha.2" { inherit profileName; };
        trust_dns_resolver = rustPackages."registry+https://github.com/rust-lang/crates.io-index".trust-dns-resolver."0.18.0-alpha.2" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".actix-codec."0.2.0" = overridableMkRustCrate (
    profileName: rec {
      name = "actix-codec";
      version = "0.2.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "09e55f0a5c2ca15795035d90c46bd0e73a5123b72f68f12596d6ba5282051380"; };
      dependencies = {
        bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
        bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."0.5.6" { inherit profileName; };
        futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.5" { inherit profileName; };
        futures_sink = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-sink."0.3.5" { inherit profileName; };
        log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
        tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."0.2.22" { inherit profileName; };
        tokio_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-util."0.2.0" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".actix-connect."1.0.2" = overridableMkRustCrate (
    profileName: rec {
      name = "actix-connect";
      version = "1.0.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c95cc9569221e9802bf4c377f6c18b90ef10227d787611decf79fd47d2a8e76c"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "http" ]
        [ "open-ssl" ]
        [ "openssl" ]
        [ "rust-tls" ]
        [ "rustls" ]
        [ "tokio-openssl" ]
        [ "tokio-rustls" ]
        [ "uri" ]
        [ "webpki" ]
      ];
      dependencies = {
        actix_codec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-codec."0.2.0" { inherit profileName; };
        actix_rt = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-rt."1.1.1" { inherit profileName; };
        actix_service = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-service."1.0.6" { inherit profileName; };
        actix_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-utils."1.0.6" { inherit profileName; };
        derive_more = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".derive_more."0.99.9" { profileName = "__noProfile"; };
        either = rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.6.0" { inherit profileName; };
        futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.3.5" { inherit profileName; };
        http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.1" { inherit profileName; };
        log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
        open_ssl = rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl."0.10.30" { inherit profileName; };
        rust_tls = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustls."0.16.0" { inherit profileName; };
        tokio_openssl = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-openssl."0.4.0" { inherit profileName; };
        tokio_rustls = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-rustls."0.12.3" { inherit profileName; };
        trust_dns_proto = rustPackages."registry+https://github.com/rust-lang/crates.io-index".trust-dns-proto."0.18.0-alpha.2" { inherit profileName; };
        trust_dns_resolver = rustPackages."registry+https://github.com/rust-lang/crates.io-index".trust-dns-resolver."0.18.0-alpha.2" { inherit profileName; };
        webpki = rustPackages."registry+https://github.com/rust-lang/crates.io-index".webpki."0.21.3" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".actix-cors."0.2.0" = overridableMkRustCrate (
    profileName: rec {
      name = "actix-cors";
      version = "0.2.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "0a6206917d5c0fdd79d81cec9ef02d3e802df4abf276d96241e1f595d971e002"; };
      dependencies = {
        actix_service = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-service."1.0.6" { inherit profileName; };
        actix_web = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-web."2.0.0" { inherit profileName; };
        derive_more = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".derive_more."0.99.9" { profileName = "__noProfile"; };
        futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.3.5" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".actix-files."0.2.2" = overridableMkRustCrate (
    profileName: rec {
      name = "actix-files";
      version = "0.2.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "193b22cb1f7b4ff12a4eb2415d6d19e47e44ea93e05930b30d05375ea29d3529"; };
      dependencies = {
        actix_http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-http."1.0.1" { inherit profileName; };
        actix_service = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-service."1.0.6" { inherit profileName; };
        actix_web = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-web."2.0.0" { inherit profileName; };
        bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
        bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."0.5.6" { inherit profileName; };
        derive_more = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".derive_more."0.99.9" { profileName = "__noProfile"; };
        futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.5" { inherit profileName; };
        futures_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.5" { inherit profileName; };
        log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
        mime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mime."0.3.16" { inherit profileName; };
        mime_guess = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mime_guess."2.0.3" { inherit profileName; };
        percent_encoding = rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.1.0" { inherit profileName; };
        v_htmlescape = rustPackages."registry+https://github.com/rust-lang/crates.io-index".v_htmlescape."0.4.5" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".actix-http."1.0.1" = overridableMkRustCrate (
    profileName: rec {
      name = "actix-http";
      version = "1.0.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c16664cc4fdea8030837ad5a845eb231fb93fc3c5c171edfefb52fad92ce9019"; };
      features = builtins.concatLists [
        [ "actix-tls" ]
        [ "brotli2" ]
        [ "compress" ]
        [ "default" ]
        [ "fail-ure" ]
        [ "failure" ]
        [ "flate2" ]
        [ "openssl" ]
        [ "rustls" ]
      ];
      dependencies = {
        actix_codec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-codec."0.2.0" { inherit profileName; };
        actix_connect = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-connect."1.0.2" { inherit profileName; };
        actix_rt = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-rt."1.1.1" { inherit profileName; };
        actix_service = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-service."1.0.6" { inherit profileName; };
        actix_threadpool = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-threadpool."0.3.3" { inherit profileName; };
        actix_tls = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-tls."1.0.0" { inherit profileName; };
        actix_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-utils."1.0.6" { inherit profileName; };
        base64 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64."0.11.0" { inherit profileName; };
        bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
        brotli2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".brotli2."0.3.2" { inherit profileName; };
        bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."0.5.6" { inherit profileName; };
        chrono = rustPackages."registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.13" { inherit profileName; };
        copyless = rustPackages."registry+https://github.com/rust-lang/crates.io-index".copyless."0.1.5" { inherit profileName; };
        derive_more = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".derive_more."0.99.9" { profileName = "__noProfile"; };
        either = rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.6.0" { inherit profileName; };
        encoding_rs = rustPackages."registry+https://github.com/rust-lang/crates.io-index".encoding_rs."0.8.23" { inherit profileName; };
        fail_ure = rustPackages."registry+https://github.com/rust-lang/crates.io-index".failure."0.1.8" { inherit profileName; };
        flate2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".flate2."1.0.16" { inherit profileName; };
        futures_channel = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-channel."0.3.5" { inherit profileName; };
        futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.5" { inherit profileName; };
        futures_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.5" { inherit profileName; };
        fxhash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fxhash."0.2.1" { inherit profileName; };
        h2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".h2."0.2.6" { inherit profileName; };
        http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.1" { inherit profileName; };
        httparse = rustPackages."registry+https://github.com/rust-lang/crates.io-index".httparse."1.3.4" { inherit profileName; };
        indexmap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."1.5.1" { inherit profileName; };
        language_tags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".language-tags."0.2.2" { inherit profileName; };
        lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
        log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
        mime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mime."0.3.16" { inherit profileName; };
        percent_encoding = rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.1.0" { inherit profileName; };
        pin_project = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project."0.4.23" { inherit profileName; };
        rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.7.3" { inherit profileName; };
        regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.3.9" { inherit profileName; };
        serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
        serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.57" { inherit profileName; };
        serde_urlencoded = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_urlencoded."0.6.1" { inherit profileName; };
        sha1 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sha1."0.6.0" { inherit profileName; };
        slab = rustPackages."registry+https://github.com/rust-lang/crates.io-index".slab."0.4.2" { inherit profileName; };
        time = rustPackages."registry+https://github.com/rust-lang/crates.io-index".time."0.1.43" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".actix-macros."0.1.2" = overridableMkRustCrate (
    profileName: rec {
      name = "actix-macros";
      version = "0.1.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a60f9ba7c4e6df97f3aacb14bb5c0cd7d98a49dcbaed0d7f292912ad9a6a3ed2"; };
      dependencies = {
        quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
        syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.38" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".actix-router."0.2.4" = overridableMkRustCrate (
    profileName: rec {
      name = "actix-router";
      version = "0.2.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "9d7a10ca4d94e8c8e7a87c5173aba1b97ba9a6563ca02b0e1cd23531093d3ec8"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "http" ]
      ];
      dependencies = {
        bytestring = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytestring."0.1.5" { inherit profileName; };
        http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.1" { inherit profileName; };
        log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
        regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.3.9" { inherit profileName; };
        serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".actix-rt."1.1.1" = overridableMkRustCrate (
    profileName: rec {
      name = "actix-rt";
      version = "1.1.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "143fcc2912e0d1de2bcf4e2f720d2a60c28652ab4179685a1ee159e0fb3db227"; };
      dependencies = {
        actix_macros = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-macros."0.1.2" { profileName = "__noProfile"; };
        actix_threadpool = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-threadpool."0.3.3" { inherit profileName; };
        copyless = rustPackages."registry+https://github.com/rust-lang/crates.io-index".copyless."0.1.5" { inherit profileName; };
        futures_channel = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-channel."0.3.5" { inherit profileName; };
        futures_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.5" { inherit profileName; };
        smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.4.2" { inherit profileName; };
        tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."0.2.22" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".actix-server."1.0.3" = overridableMkRustCrate (
    profileName: rec {
      name = "actix-server";
      version = "1.0.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e6d74b464215a473c973a2d7d03a69cc10f4ce1f4b38a7659c5193dc5c675630"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
      dependencies = {
        actix_codec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-codec."0.2.0" { inherit profileName; };
        actix_rt = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-rt."1.1.1" { inherit profileName; };
        actix_service = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-service."1.0.6" { inherit profileName; };
        actix_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-utils."1.0.6" { inherit profileName; };
        futures_channel = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-channel."0.3.5" { inherit profileName; };
        futures_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.5" { inherit profileName; };
        log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
        mio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mio."0.6.22" { inherit profileName; };
        mio_uds = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mio-uds."0.6.8" { inherit profileName; };
        num_cpus = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.13.0" { inherit profileName; };
        slab = rustPackages."registry+https://github.com/rust-lang/crates.io-index".slab."0.4.2" { inherit profileName; };
        socket2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".socket2."0.3.12" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".actix-service."1.0.6" = overridableMkRustCrate (
    profileName: rec {
      name = "actix-service";
      version = "1.0.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "0052435d581b5be835d11f4eb3bce417c8af18d87ddf8ace99f8e67e595882bb"; };
      dependencies = {
        futures_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.5" { inherit profileName; };
        pin_project = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project."0.4.23" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".actix-testing."1.0.1" = overridableMkRustCrate (
    profileName: rec {
      name = "actix-testing";
      version = "1.0.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "47239ca38799ab74ee6a8a94d1ce857014b2ac36f242f70f3f75a66f691e791c"; };
      dependencies = {
        actix_macros = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-macros."0.1.2" { profileName = "__noProfile"; };
        actix_rt = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-rt."1.1.1" { inherit profileName; };
        actix_server = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-server."1.0.3" { inherit profileName; };
        actix_service = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-service."1.0.6" { inherit profileName; };
        log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
        socket2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".socket2."0.3.12" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".actix-threadpool."0.3.3" = overridableMkRustCrate (
    profileName: rec {
      name = "actix-threadpool";
      version = "0.3.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "d209f04d002854b9afd3743032a27b066158817965bf5d036824d19ac2cc0e30"; };
      dependencies = {
        derive_more = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".derive_more."0.99.9" { profileName = "__noProfile"; };
        futures_channel = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-channel."0.3.5" { inherit profileName; };
        lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
        log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
        num_cpus = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.13.0" { inherit profileName; };
        parking_lot = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.11.0" { inherit profileName; };
        threadpool = rustPackages."registry+https://github.com/rust-lang/crates.io-index".threadpool."1.8.1" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".actix-tls."1.0.0" = overridableMkRustCrate (
    profileName: rec {
      name = "actix-tls";
      version = "1.0.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a4e5b4faaf105e9a6d389c606c298dcdb033061b00d532af9df56ff3a54995a8"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "open-ssl" ]
        [ "openssl" ]
        [ "rust-tls" ]
        [ "rustls" ]
        [ "tokio-openssl" ]
        [ "tokio-rustls" ]
        [ "webpki" ]
        [ "webpki-roots" ]
      ];
      dependencies = {
        actix_codec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-codec."0.2.0" { inherit profileName; };
        actix_rt = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-rt."1.1.1" { inherit profileName; };
        actix_service = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-service."1.0.6" { inherit profileName; };
        actix_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-utils."1.0.6" { inherit profileName; };
        derive_more = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".derive_more."0.99.9" { profileName = "__noProfile"; };
        either = rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.6.0" { inherit profileName; };
        futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.3.5" { inherit profileName; };
        log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
        open_ssl = rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl."0.10.30" { inherit profileName; };
        rust_tls = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustls."0.16.0" { inherit profileName; };
        tokio_openssl = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-openssl."0.4.0" { inherit profileName; };
        tokio_rustls = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-rustls."0.12.3" { inherit profileName; };
        webpki = rustPackages."registry+https://github.com/rust-lang/crates.io-index".webpki."0.21.3" { inherit profileName; };
        webpki_roots = rustPackages."registry+https://github.com/rust-lang/crates.io-index".webpki-roots."0.17.0" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".actix-utils."1.0.6" = overridableMkRustCrate (
    profileName: rec {
      name = "actix-utils";
      version = "1.0.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "fcf8f5631bf01adec2267808f00e228b761c60c0584cc9fa0b5364f41d147f4e"; };
      dependencies = {
        actix_codec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-codec."0.2.0" { inherit profileName; };
        actix_rt = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-rt."1.1.1" { inherit profileName; };
        actix_service = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-service."1.0.6" { inherit profileName; };
        bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
        bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."0.5.6" { inherit profileName; };
        either = rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.6.0" { inherit profileName; };
        futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.3.5" { inherit profileName; };
        log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
        pin_project = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project."0.4.23" { inherit profileName; };
        slab = rustPackages."registry+https://github.com/rust-lang/crates.io-index".slab."0.4.2" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".actix-web."2.0.0" = overridableMkRustCrate (
    profileName: rec {
      name = "actix-web";
      version = "2.0.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "3158e822461040822f0dbf1735b9c2ce1f95f93b651d7a7aded00b1efbb1f635"; };
      features = builtins.concatLists [
        [ "compress" ]
        [ "default" ]
        [ "failure" ]
        [ "open-ssl" ]
        [ "openssl" ]
        [ "rust-tls" ]
        [ "rustls" ]
      ];
      dependencies = {
        actix_codec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-codec."0.2.0" { inherit profileName; };
        actix_http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-http."1.0.1" { inherit profileName; };
        actix_macros = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-macros."0.1.2" { profileName = "__noProfile"; };
        actix_router = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-router."0.2.4" { inherit profileName; };
        actix_rt = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-rt."1.1.1" { inherit profileName; };
        actix_server = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-server."1.0.3" { inherit profileName; };
        actix_service = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-service."1.0.6" { inherit profileName; };
        actix_testing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-testing."1.0.1" { inherit profileName; };
        actix_threadpool = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-threadpool."0.3.3" { inherit profileName; };
        actix_tls = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-tls."1.0.0" { inherit profileName; };
        actix_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-utils."1.0.6" { inherit profileName; };
        actix_web_codegen = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-web-codegen."0.2.2" { profileName = "__noProfile"; };
        awc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".awc."1.0.1" { inherit profileName; };
        bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."0.5.6" { inherit profileName; };
        derive_more = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".derive_more."0.99.9" { profileName = "__noProfile"; };
        encoding_rs = rustPackages."registry+https://github.com/rust-lang/crates.io-index".encoding_rs."0.8.23" { inherit profileName; };
        futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.3.5" { inherit profileName; };
        fxhash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fxhash."0.2.1" { inherit profileName; };
        log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
        mime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mime."0.3.16" { inherit profileName; };
        net2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".net2."0.2.34" { inherit profileName; };
        open_ssl = rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl."0.10.30" { inherit profileName; };
        pin_project = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project."0.4.23" { inherit profileName; };
        regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.3.9" { inherit profileName; };
        rust_tls = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustls."0.16.0" { inherit profileName; };
        serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
        serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.57" { inherit profileName; };
        serde_urlencoded = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_urlencoded."0.6.1" { inherit profileName; };
        time = rustPackages."registry+https://github.com/rust-lang/crates.io-index".time."0.1.43" { inherit profileName; };
        url = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."2.1.1" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".actix-web-codegen."0.2.2" = overridableMkRustCrate (
    profileName: rec {
      name = "actix-web-codegen";
      version = "0.2.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a71bf475cbe07281d0b3696abb48212db118e7e23219f13596ce865235ff5766"; };
      dependencies = {
        proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
        quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
        syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.38" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".actix_derive."0.5.0" = overridableMkRustCrate (
    profileName: rec {
      name = "actix_derive";
      version = "0.5.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b95aceadaf327f18f0df5962fedc1bde2f870566a0b9f65c89508a3b1f79334c"; };
      dependencies = {
        proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
        quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
        syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.38" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".addr2line."0.13.0" = overridableMkRustCrate (
    profileName: rec {
      name = "addr2line";
      version = "0.13.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "1b6a2d3371669ab3ca9797670853d61402b03d0b4b9ebf33d677dfa720203072"; };
      dependencies = {
        gimli = rustPackages."registry+https://github.com/rust-lang/crates.io-index".gimli."0.22.0" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".adler."0.2.3" = overridableMkRustCrate (
    profileName: rec {
      name = "adler";
      version = "0.2.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ee2a4ec343196209d6594e19543ae87a39f96d5534d7174822a3ad825dd6ed7e"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".adler32."1.2.0" = overridableMkRustCrate (
    profileName: rec {
      name = "adler32";
      version = "1.2.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "aae1277d39aeec15cb388266ecc24b11c80469deae6067e17a1a7aa9e5c1f234"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".aho-corasick."0.7.13" = overridableMkRustCrate (
    profileName: rec {
      name = "aho-corasick";
      version = "0.7.13";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "043164d8ba5c4c3035fec9bbee8647c0261d788f3474306f93bb65901cae0e86"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.3.3" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".ansi_term."0.11.0" = overridableMkRustCrate (
    profileName: rec {
      name = "ansi_term";
      version = "0.11.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ee49baf6cb617b853aa8d93bf420db2383fab46d314482ca2803b40d5fde979b"; };
      dependencies = {
        ${ if hostPlatform.parsed.kernel.name == "windows" then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".arc-swap."0.4.7" = overridableMkRustCrate (
    profileName: rec {
      name = "arc-swap";
      version = "0.4.7";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "4d25d88fd6b8041580a654f9d0c581a047baee2b3efee13275f2fc392fc75034"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".arrayref."0.3.6" = overridableMkRustCrate (
    profileName: rec {
      name = "arrayref";
      version = "0.3.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a4c527152e37cf757a3f78aae5a06fbeefdb07ccc535c980a3208ee3060dd544"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".arrayvec."0.5.1" = overridableMkRustCrate (
    profileName: rec {
      name = "arrayvec";
      version = "0.5.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "cff77d8686867eceff3105329d4698d96c2391c176d5d03adc90c7389162b5b8"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".ascii-canvas."2.0.0" = overridableMkRustCrate (
    profileName: rec {
      name = "ascii-canvas";
      version = "2.0.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ff8eb72df928aafb99fe5d37b383f2fe25bd2a765e3e5f7c365916b6f2463a29"; };
      dependencies = {
        term = rustPackages."registry+https://github.com/rust-lang/crates.io-index".term."0.5.2" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".assert-json-diff."1.1.0" = overridableMkRustCrate (
    profileName: rec {
      name = "assert-json-diff";
      version = "1.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "4259cbe96513d2f1073027a259fc2ca917feb3026a5a8d984e3628e490255cc0"; };
      dependencies = {
        extend = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".extend."0.1.2" { profileName = "__noProfile"; };
        serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
        serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.57" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".async-trait."0.1.37" = overridableMkRustCrate (
    profileName: rec {
      name = "async-trait";
      version = "0.1.37";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "caae68055714ff28740f310927e04f2eba76ff580b16fb18ed90073ee71646f7"; };
      dependencies = {
        proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
        quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
        syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.38" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".atty."0.2.14" = overridableMkRustCrate (
    profileName: rec {
      name = "atty";
      version = "0.2.14";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8"; };
      dependencies = {
        ${ if hostPlatform.parsed.kernel.name == "hermit" then "hermit_abi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hermit-abi."0.1.15" { inherit profileName; };
        ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.74" { inherit profileName; };
        ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".autocfg."0.1.7" = overridableMkRustCrate (
    profileName: rec {
      name = "autocfg";
      version = "0.1.7";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "1d49d90015b3c36167a20fe2810c5cd875ad504b39cff3d4eae7977e6b7c1cb2"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".autocfg."1.0.0" = overridableMkRustCrate (
    profileName: rec {
      name = "autocfg";
      version = "1.0.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f8aac770f1885fd7e387acedd76065302551364496e46b3dd00860b2f8359b9d"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".awc."1.0.1" = overridableMkRustCrate (
    profileName: rec {
      name = "awc";
      version = "1.0.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "d7601d4d1d7ef2335d6597a41b5fe069f6ab799b85f53565ab390e7b7065aac5"; };
      features = builtins.concatLists [
        [ "compress" ]
        [ "open-ssl" ]
        [ "openssl" ]
        [ "rust-tls" ]
        [ "rustls" ]
      ];
      dependencies = {
        actix_codec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-codec."0.2.0" { inherit profileName; };
        actix_http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-http."1.0.1" { inherit profileName; };
        actix_rt = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-rt."1.1.1" { inherit profileName; };
        actix_service = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-service."1.0.6" { inherit profileName; };
        base64 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64."0.11.0" { inherit profileName; };
        bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."0.5.6" { inherit profileName; };
        derive_more = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".derive_more."0.99.9" { profileName = "__noProfile"; };
        futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.5" { inherit profileName; };
        log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
        mime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mime."0.3.16" { inherit profileName; };
        open_ssl = rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl."0.10.30" { inherit profileName; };
        percent_encoding = rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.1.0" { inherit profileName; };
        rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.7.3" { inherit profileName; };
        rust_tls = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustls."0.16.0" { inherit profileName; };
        serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
        serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.57" { inherit profileName; };
        serde_urlencoded = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_urlencoded."0.6.1" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".backtrace."0.3.50" = overridableMkRustCrate (
    profileName: rec {
      name = "backtrace";
      version = "0.3.50";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "46254cf2fdcdf1badb5934448c1bcbe046a56537b3987d96c51a7afc5d03f293"; };
      features = builtins.concatLists [
        [ "addr2line" ]
        [ "default" ]
        [ "gimli-symbolize" ]
        [ "miniz_oxide" ]
        [ "object" ]
        [ "std" ]
      ];
      dependencies = {
        addr2line = rustPackages."registry+https://github.com/rust-lang/crates.io-index".addr2line."0.13.0" { inherit profileName; };
        cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
        libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.74" { inherit profileName; };
        miniz_oxide = rustPackages."registry+https://github.com/rust-lang/crates.io-index".miniz_oxide."0.4.0" { inherit profileName; };
        object = rustPackages."registry+https://github.com/rust-lang/crates.io-index".object."0.20.0" { inherit profileName; };
        rustc_demangle = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-demangle."0.1.16" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".base32."0.4.0" = overridableMkRustCrate (
    profileName: rec {
      name = "base32";
      version = "0.4.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "23ce669cd6c8588f79e15cf450314f9638f967fc5770ff1c7c1deb0925ea7cfa"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".base64."0.10.1" = overridableMkRustCrate (
    profileName: rec {
      name = "base64";
      version = "0.10.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "0b25d992356d2eb0ed82172f5248873db5560c4721f564b13cb5193bda5e668e"; };
      dependencies = {
        byteorder = rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.3.4" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".base64."0.11.0" = overridableMkRustCrate (
    profileName: rec {
      name = "base64";
      version = "0.11.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b41b7ea54a0c9d92199de89e20e58d49f02f8e699814ef3fdf266f6f748d15c7"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".base64."0.12.3" = overridableMkRustCrate (
    profileName: rec {
      name = "base64";
      version = "0.12.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "3441f0f7b02788e948e47f457ca01f1d7e6d92c693bc132c22b087d3141c03ff"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".beef."0.4.4" = overridableMkRustCrate (
    profileName: rec {
      name = "beef";
      version = "0.4.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "474a626a67200bd107d44179bb3d4fc61891172d11696609264589be6a0e6a43"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".bit-set."0.5.2" = overridableMkRustCrate (
    profileName: rec {
      name = "bit-set";
      version = "0.5.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "6e11e16035ea35e4e5997b393eacbf6f63983188f7a2ad25bfb13465f5ad59de"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        bit_vec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bit-vec."0.6.2" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".bit-vec."0.6.2" = overridableMkRustCrate (
    profileName: rec {
      name = "bit-vec";
      version = "0.6.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "5f0dc55f2d8a1a85650ac47858bb001b4c0dd73d79e3c455a842925e68d29cd3"; };
      features = builtins.concatLists [
        [ "std" ]
      ];
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" = overridableMkRustCrate (
    profileName: rec {
      name = "bitflags";
      version = "1.2.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "cf1de2fe8c75bc145a2f577add951f8134889b4795d47466a54a5c846d691693"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".blake2b_simd."0.5.10" = overridableMkRustCrate (
    profileName: rec {
      name = "blake2b_simd";
      version = "0.5.10";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "d8fb2d74254a3a0b5cac33ac9f8ed0e44aa50378d9dbb2e5d83bd21ed1dc2c8a"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        arrayref = rustPackages."registry+https://github.com/rust-lang/crates.io-index".arrayref."0.3.6" { inherit profileName; };
        arrayvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".arrayvec."0.5.1" { inherit profileName; };
        constant_time_eq = rustPackages."registry+https://github.com/rust-lang/crates.io-index".constant_time_eq."0.1.5" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".block-buffer."0.7.3" = overridableMkRustCrate (
    profileName: rec {
      name = "block-buffer";
      version = "0.7.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c0940dc441f31689269e10ac70eb1002a3a1d3ad1390e030043662eb7fe4688b"; };
      dependencies = {
        block_padding = rustPackages."registry+https://github.com/rust-lang/crates.io-index".block-padding."0.1.5" { inherit profileName; };
        byte_tools = rustPackages."registry+https://github.com/rust-lang/crates.io-index".byte-tools."0.3.1" { inherit profileName; };
        byteorder = rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.3.4" { inherit profileName; };
        generic_array = rustPackages."registry+https://github.com/rust-lang/crates.io-index".generic-array."0.12.3" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".block-buffer."0.9.0" = overridableMkRustCrate (
    profileName: rec {
      name = "block-buffer";
      version = "0.9.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "4152116fd6e9dadb291ae18fc1ec3575ed6d84c29642d97890f4b4a3417297e4"; };
      dependencies = {
        generic_array = rustPackages."registry+https://github.com/rust-lang/crates.io-index".generic-array."0.14.4" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".block-padding."0.1.5" = overridableMkRustCrate (
    profileName: rec {
      name = "block-padding";
      version = "0.1.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "fa79dedbb091f449f1f39e53edf88d5dbe95f895dae6135a8d7b881fb5af73f5"; };
      dependencies = {
        byte_tools = rustPackages."registry+https://github.com/rust-lang/crates.io-index".byte-tools."0.3.1" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".brotli-sys."0.3.2" = overridableMkRustCrate (
    profileName: rec {
      name = "brotli-sys";
      version = "0.3.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "4445dea95f4c2b41cde57cc9fee236ae4dbae88d8fcbdb4750fc1bb5d86aaecd"; };
      dependencies = {
        libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.74" { inherit profileName; };
      };
      buildDependencies = {
        cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.58" { profileName = "__noProfile"; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".brotli2."0.3.2" = overridableMkRustCrate (
    profileName: rec {
      name = "brotli2";
      version = "0.3.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "0cb036c3eade309815c15ddbacec5b22c4d1f3983a774ab2eac2e3e9ea85568e"; };
      dependencies = {
        brotli_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".brotli-sys."0.3.2" { inherit profileName; };
        libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.74" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".bumpalo."3.4.0" = overridableMkRustCrate (
    profileName: rec {
      name = "bumpalo";
      version = "3.4.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "2e8c087f005730276d1096a652e92a8bacee2e2472bcc9715a74d2bec38b5820"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".byte-tools."0.3.1" = overridableMkRustCrate (
    profileName: rec {
      name = "byte-tools";
      version = "0.3.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e3b5ca7a04898ad4bcd41c90c5285445ff5b791899bb1b0abdd2a2aa791211d7"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".byteorder."1.3.4" = overridableMkRustCrate (
    profileName: rec {
      name = "byteorder";
      version = "1.3.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "08c48aae112d48ed9f069b33538ea9e3e90aa263cfa3d1c24309612b1f7472de"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".bytes."0.5.6" = overridableMkRustCrate (
    profileName: rec {
      name = "bytes";
      version = "0.5.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "0e4cec68f03f32e44924783795810fa50a7035d8c8ebe78580ad7e6c703fba38"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".bytestring."0.1.5" = overridableMkRustCrate (
    profileName: rec {
      name = "bytestring";
      version = "0.1.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "fc7c05fa5172da78a62d9949d662d2ac89d4cc7355d7b49adee5163f1fb3f363"; };
      dependencies = {
        bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."0.5.6" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".candid."0.6.0" = overridableMkRustCrate (
    profileName: rec {
      name = "candid";
      version = "0.6.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "15f6e879d53af7853a2d8ec7fd7d786bbf363a1535296542b957e67592f229dc"; };
      dependencies = {
        byteorder = rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.3.4" { inherit profileName; };
        candid_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".candid_derive."0.4.0" { profileName = "__noProfile"; };
        codespan_reporting = rustPackages."registry+https://github.com/rust-lang/crates.io-index".codespan-reporting."0.9.5" { inherit profileName; };
        hex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hex."0.4.2" { inherit profileName; };
        ic_types = rustPackages."git+ssh://git@github.com/dfinity-lab/agent-rust.git".ic-types."0.1.1" { inherit profileName; };
        lalrpop_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lalrpop-util."0.19.0" { inherit profileName; };
        leb128 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".leb128."0.2.4" { inherit profileName; };
        logos = rustPackages."registry+https://github.com/rust-lang/crates.io-index".logos."0.11.4" { inherit profileName; };
        num_bigint = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-bigint."0.3.0" { inherit profileName; };
        num_traits = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.12" { inherit profileName; };
        num_enum = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_enum."0.5.1" { inherit profileName; };
        paste = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".paste."1.0.0" { profileName = "__noProfile"; };
        pretty = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pretty."0.10.0" { inherit profileName; };
        serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
      };
      buildDependencies = {
        lalrpop = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".lalrpop."0.19.0" { profileName = "__noProfile"; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".candid_derive."0.4.0" = overridableMkRustCrate (
    profileName: rec {
      name = "candid_derive";
      version = "0.4.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ab31ccaf3ab1184bab4a139afb0d23c3aa54144d4a92ef0d0de7653cad4f679f"; };
      dependencies = {
        proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
        quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
        syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.38" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".cc."1.0.58" = overridableMkRustCrate (
    profileName: rec {
      name = "cc";
      version = "1.0.58";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f9a06fb2e53271d7c279ec1efea6ab691c35a2ae67ec0d91d7acec0caf13b518"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" = overridableMkRustCrate (
    profileName: rec {
      name = "cfg-if";
      version = "0.1.10";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "4785bdd1c96b2a846b2bd7cc02e86b6b3dbf14e7e53446c4f54c92a361040822"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.13" = overridableMkRustCrate (
    profileName: rec {
      name = "chrono";
      version = "0.4.13";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c74d84029116787153e02106bf53e66828452a4b325cc8652b788b5967c0a0b6"; };
      features = builtins.concatLists [
        [ "clock" ]
        [ "default" ]
        [ "std" ]
        [ "time" ]
      ];
      dependencies = {
        num_integer = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-integer."0.1.43" { inherit profileName; };
        num_traits = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.12" { inherit profileName; };
        time = rustPackages."registry+https://github.com/rust-lang/crates.io-index".time."0.1.43" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".clap."2.33.3" = overridableMkRustCrate (
    profileName: rec {
      name = "clap";
      version = "2.33.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "37e58ac78573c40708d45522f0d80fa2f01cc4f9b4e2bf749807255454312002"; };
      features = builtins.concatLists [
        [ "ansi_term" ]
        [ "atty" ]
        [ "color" ]
        [ "default" ]
        [ "strsim" ]
        [ "suggestions" ]
        [ "vec_map" ]
      ];
      dependencies = {
        ${ if !hostPlatform.isWindows then "ansi_term" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ansi_term."0.11.0" { inherit profileName; };
        atty = rustPackages."registry+https://github.com/rust-lang/crates.io-index".atty."0.2.14" { inherit profileName; };
        bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
        strsim = rustPackages."registry+https://github.com/rust-lang/crates.io-index".strsim."0.8.0" { inherit profileName; };
        textwrap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".textwrap."0.11.0" { inherit profileName; };
        unicode_width = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-width."0.1.8" { inherit profileName; };
        vec_map = rustPackages."registry+https://github.com/rust-lang/crates.io-index".vec_map."0.8.2" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".clicolors-control."1.0.1" = overridableMkRustCrate (
    profileName: rec {
      name = "clicolors-control";
      version = "1.0.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "90082ee5dcdd64dc4e9e0d37fbf3ee325419e39c0092191e0393df65518f741e"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "terminal_autoconfig" ]
      ];
      dependencies = {
        ${ if hostPlatform.isWindows then "atty" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".atty."0.2.14" { inherit profileName; };
        lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
        ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.74" { inherit profileName; };
        ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".cloudabi."0.0.3" = overridableMkRustCrate (
    profileName: rec {
      name = "cloudabi";
      version = "0.0.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ddfc5b9aa5d4507acaf872de71051dfd0e309860e88966e1051e462a077aac4f"; };
      features = builtins.concatLists [
        [ "bitflags" ]
        [ "default" ]
      ];
      dependencies = {
        bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".cloudabi."0.1.0" = overridableMkRustCrate (
    profileName: rec {
      name = "cloudabi";
      version = "0.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "4344512281c643ae7638bbabc3af17a11307803ec8f0fcad9fae512a8bf36467"; };
      features = builtins.concatLists [
        [ "bitflags" ]
        [ "default" ]
      ];
      dependencies = {
        bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".codespan-reporting."0.9.5" = overridableMkRustCrate (
    profileName: rec {
      name = "codespan-reporting";
      version = "0.9.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "6e0762455306b1ed42bc651ef6a2197aabda5e1d4a43c34d5eab5c1a3634e81d"; };
      dependencies = {
        termcolor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".termcolor."1.1.0" { inherit profileName; };
        unicode_width = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-width."0.1.8" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".colored."1.9.3" = overridableMkRustCrate (
    profileName: rec {
      name = "colored";
      version = "1.9.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f4ffc801dacf156c5854b9df4f425a626539c3a6ef7893cc0c5084a23f0b6c59"; };
      dependencies = {
        atty = rustPackages."registry+https://github.com/rust-lang/crates.io-index".atty."0.2.14" { inherit profileName; };
        lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
        ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".console."0.7.7" = overridableMkRustCrate (
    profileName: rec {
      name = "console";
      version = "0.7.7";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8ca57c2c14b8a2bf3105bc9d15574aad80babf6a9c44b1058034cdf8bd169628"; };
      dependencies = {
        atty = rustPackages."registry+https://github.com/rust-lang/crates.io-index".atty."0.2.14" { inherit profileName; };
        clicolors_control = rustPackages."registry+https://github.com/rust-lang/crates.io-index".clicolors-control."1.0.1" { inherit profileName; };
        ${ if hostPlatform.isWindows then "encode_unicode" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".encode_unicode."0.3.6" { inherit profileName; };
        lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
        libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.74" { inherit profileName; };
        parking_lot = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.11.0" { inherit profileName; };
        regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.3.9" { inherit profileName; };
        ${ if hostPlatform.isUnix then "termios" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".termios."0.3.2" { inherit profileName; };
        unicode_width = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-width."0.1.8" { inherit profileName; };
        ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".console."0.11.3" = overridableMkRustCrate (
    profileName: rec {
      name = "console";
      version = "0.11.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8c0994e656bba7b922d8dd1245db90672ffb701e684e45be58f20719d69abc5a"; };
      features = builtins.concatLists [
        [ "ansi-parsing" ]
        [ "default" ]
        [ "regex" ]
        [ "unicode-width" ]
        [ "winapi-util" ]
        [ "windows-console-colors" ]
      ];
      dependencies = {
        ${ if hostPlatform.isWindows then "encode_unicode" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".encode_unicode."0.3.6" { inherit profileName; };
        lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
        libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.74" { inherit profileName; };
        regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.3.9" { inherit profileName; };
        terminal_size = rustPackages."registry+https://github.com/rust-lang/crates.io-index".terminal_size."0.1.13" { inherit profileName; };
        ${ if hostPlatform.isUnix then "termios" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".termios."0.3.2" { inherit profileName; };
        unicode_width = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-width."0.1.8" { inherit profileName; };
        ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
        ${ if hostPlatform.isWindows then "winapi_util" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-util."0.1.5" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".console."0.12.0" = overridableMkRustCrate (
    profileName: rec {
      name = "console";
      version = "0.12.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c0b1aacfaffdbff75be81c15a399b4bedf78aaefe840e8af1d299ac2ade885d2"; };
      features = builtins.concatLists [
        [ "ansi-parsing" ]
        [ "default" ]
        [ "regex" ]
        [ "unicode-width" ]
        [ "winapi-util" ]
        [ "windows-console-colors" ]
      ];
      dependencies = {
        ${ if hostPlatform.isWindows then "encode_unicode" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".encode_unicode."0.3.6" { inherit profileName; };
        lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
        libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.74" { inherit profileName; };
        regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.3.9" { inherit profileName; };
        terminal_size = rustPackages."registry+https://github.com/rust-lang/crates.io-index".terminal_size."0.1.13" { inherit profileName; };
        ${ if hostPlatform.isUnix then "termios" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".termios."0.3.2" { inherit profileName; };
        unicode_width = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-width."0.1.8" { inherit profileName; };
        ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
        ${ if hostPlatform.isWindows then "winapi_util" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-util."0.1.5" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".constant_time_eq."0.1.5" = overridableMkRustCrate (
    profileName: rec {
      name = "constant_time_eq";
      version = "0.1.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "245097e9a4535ee1e3e3931fcfcd55a796a44c643e8596ff6566d68f09b87bbc"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".copyless."0.1.5" = overridableMkRustCrate (
    profileName: rec {
      name = "copyless";
      version = "0.1.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a2df960f5d869b2dd8532793fde43eb5427cceb126c929747a26823ab0eeb536"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".core-foundation."0.7.0" = overridableMkRustCrate (
    profileName: rec {
      name = "core-foundation";
      version = "0.7.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "57d24c7a13c43e870e37c1556b74555437870a04514f7685f5b354e090567171"; };
      dependencies = {
        core_foundation_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".core-foundation-sys."0.7.0" { inherit profileName; };
        libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.74" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".core-foundation-sys."0.7.0" = overridableMkRustCrate (
    profileName: rec {
      name = "core-foundation-sys";
      version = "0.7.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b3a71ab494c0b5b860bdc8407ae08978052417070c2ced38573a9157ad75b8ac"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".cpuid-bool."0.1.2" = overridableMkRustCrate (
    profileName: rec {
      name = "cpuid-bool";
      version = "0.1.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8aebca1129a03dc6dc2b127edd729435bbc4a37e1d5f4d7513165089ceb02634"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".crc32fast."1.2.0" = overridableMkRustCrate (
    profileName: rec {
      name = "crc32fast";
      version = "1.2.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ba125de2af0df55319f41944744ad91c71113bf74a4646efff39afe1f6842db1"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".crossbeam."0.7.3" = overridableMkRustCrate (
    profileName: rec {
      name = "crossbeam";
      version = "0.7.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "69323bff1fb41c635347b8ead484a5ca6c3f11914d784170b158d8449ab07f8e"; };
      features = builtins.concatLists [
        [ "crossbeam-channel" ]
        [ "crossbeam-deque" ]
        [ "crossbeam-queue" ]
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
        crossbeam_channel = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-channel."0.4.3" { inherit profileName; };
        crossbeam_deque = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-deque."0.7.3" { inherit profileName; };
        crossbeam_epoch = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-epoch."0.8.2" { inherit profileName; };
        crossbeam_queue = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-queue."0.2.3" { inherit profileName; };
        crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.7.2" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".crossbeam-channel."0.4.3" = overridableMkRustCrate (
    profileName: rec {
      name = "crossbeam-channel";
      version = "0.4.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "09ee0cc8804d5393478d743b035099520087a5186f3b93fa58cec08fa62407b6"; };
      features = builtins.concatLists [
        [ "crossbeam-utils" ]
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
        crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.7.2" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".crossbeam-deque."0.7.3" = overridableMkRustCrate (
    profileName: rec {
      name = "crossbeam-deque";
      version = "0.7.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "9f02af974daeee82218205558e51ec8768b48cf524bd01d550abe5573a608285"; };
      dependencies = {
        crossbeam_epoch = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-epoch."0.8.2" { inherit profileName; };
        crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.7.2" { inherit profileName; };
        maybe_uninit = rustPackages."registry+https://github.com/rust-lang/crates.io-index".maybe-uninit."2.0.0" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".crossbeam-epoch."0.8.2" = overridableMkRustCrate (
    profileName: rec {
      name = "crossbeam-epoch";
      version = "0.8.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "058ed274caafc1f60c4997b5fc07bf7dc7cca454af7c6e81edffe5f33f70dace"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "lazy_static" ]
        [ "std" ]
      ];
      dependencies = {
        cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
        crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.7.2" { inherit profileName; };
        lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
        maybe_uninit = rustPackages."registry+https://github.com/rust-lang/crates.io-index".maybe-uninit."2.0.0" { inherit profileName; };
        memoffset = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memoffset."0.5.5" { inherit profileName; };
        scopeguard = rustPackages."registry+https://github.com/rust-lang/crates.io-index".scopeguard."1.1.0" { inherit profileName; };
      };
      buildDependencies = {
        autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.0.0" { profileName = "__noProfile"; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".crossbeam-queue."0.2.3" = overridableMkRustCrate (
    profileName: rec {
      name = "crossbeam-queue";
      version = "0.2.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "774ba60a54c213d409d5353bda12d49cd68d14e45036a285234c8d6f91f92570"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
        crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.7.2" { inherit profileName; };
        maybe_uninit = rustPackages."registry+https://github.com/rust-lang/crates.io-index".maybe-uninit."2.0.0" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.7.2" = overridableMkRustCrate (
    profileName: rec {
      name = "crossbeam-utils";
      version = "0.7.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c3c7c73a2d1e9fc0886a08b93e98eb643461230d5f1925e4036204d5f2e261a8"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "lazy_static" ]
        [ "std" ]
      ];
      dependencies = {
        cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
        lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      };
      buildDependencies = {
        autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.0.0" { profileName = "__noProfile"; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".delay."0.2.0" = overridableMkRustCrate (
    profileName: rec {
      name = "delay";
      version = "0.2.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "6eb11c569f9e41ce743746d5995ba75531d13e4f9763db6f4061e25d46fb9758"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".derivative."2.1.1" = overridableMkRustCrate (
    profileName: rec {
      name = "derivative";
      version = "2.1.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "cb582b60359da160a9477ee80f15c8d784c477e69c217ef2cdd4169c24ea380f"; };
      features = builtins.concatLists [
        [ "use_core" ]
      ];
      dependencies = {
        proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
        quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
        syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.38" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".derive_more."0.99.9" = overridableMkRustCrate (
    profileName: rec {
      name = "derive_more";
      version = "0.99.9";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "298998b1cf6b5b2c8a7b023dfd45821825ce3ba8a8af55c921a0e734e4653f76"; };
      features = builtins.concatLists [
        [ "add" ]
        [ "add_assign" ]
        [ "as_mut" ]
        [ "as_ref" ]
        [ "constructor" ]
        [ "default" ]
        [ "deref" ]
        [ "deref_mut" ]
        [ "display" ]
        [ "error" ]
        [ "from" ]
        [ "from_str" ]
        [ "index" ]
        [ "index_mut" ]
        [ "into" ]
        [ "into_iterator" ]
        [ "iterator" ]
        [ "mul" ]
        [ "mul_assign" ]
        [ "not" ]
        [ "sum" ]
        [ "try_into" ]
      ];
      dependencies = {
        proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
        quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
        syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.38" { inherit profileName; };
      };
    }
  );

  "unknown".dfx."0.6.8" = overridableMkRustCrate (
    profileName: rec {
      name = "dfx";
      version = "0.6.8";
      registry = "unknown";
      src = fetchCrateLocal ./src/dfx/.;
      dependencies = {
        actix = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix."0.9.0" { inherit profileName; };
        actix_cors = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-cors."0.2.0" { inherit profileName; };
        actix_files = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-files."0.2.2" { inherit profileName; };
        actix_server = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-server."1.0.3" { inherit profileName; };
        actix_web = rustPackages."registry+https://github.com/rust-lang/crates.io-index".actix-web."2.0.0" { inherit profileName; };
        atty = rustPackages."registry+https://github.com/rust-lang/crates.io-index".atty."0.2.14" { inherit profileName; };
        base64 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64."0.11.0" { inherit profileName; };
        candid = rustPackages."registry+https://github.com/rust-lang/crates.io-index".candid."0.6.0" { inherit profileName; };
        chrono = rustPackages."registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.13" { inherit profileName; };
        clap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".clap."2.33.3" { inherit profileName; };
        console = rustPackages."registry+https://github.com/rust-lang/crates.io-index".console."0.7.7" { inherit profileName; };
        crossbeam = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam."0.7.3" { inherit profileName; };
        delay = rustPackages."registry+https://github.com/rust-lang/crates.io-index".delay."0.2.0" { inherit profileName; };
        dialoguer = rustPackages."registry+https://github.com/rust-lang/crates.io-index".dialoguer."0.6.2" { inherit profileName; };
        erased_serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".erased-serde."0.3.12" { inherit profileName; };
        flate2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".flate2."1.0.16" { inherit profileName; };
        futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.3.5" { inherit profileName; };
        hex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hex."0.4.2" { inherit profileName; };
        hotwatch = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hotwatch."0.4.3" { inherit profileName; };
        humanize_rs = rustPackages."registry+https://github.com/rust-lang/crates.io-index".humanize-rs."0.1.5" { inherit profileName; };
        ic_agent = rustPackages."git+ssh://git@github.com/dfinity-lab/agent-rust.git".ic-agent."0.1.0" { inherit profileName; };
        ic_types = rustPackages."git+ssh://git@github.com/dfinity-lab/agent-rust.git".ic-types."0.1.1" { inherit profileName; };
        indicatif = rustPackages."registry+https://github.com/rust-lang/crates.io-index".indicatif."0.13.0" { inherit profileName; };
        lazy_init = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy-init."0.3.0" { inherit profileName; };
        lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
        libflate = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libflate."0.1.27" { inherit profileName; };
        mockall = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mockall."0.6.0" { inherit profileName; };
        pem = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pem."0.7.0" { inherit profileName; };
        petgraph = rustPackages."registry+https://github.com/rust-lang/crates.io-index".petgraph."0.5.1" { inherit profileName; };
        rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.7.3" { inherit profileName; };
        regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.3.9" { inherit profileName; };
        reqwest = rustPackages."registry+https://github.com/rust-lang/crates.io-index".reqwest."0.10.7" { inherit profileName; };
        ring = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ring."0.16.15" { inherit profileName; };
        semver = rustPackages."registry+https://github.com/rust-lang/crates.io-index".semver."0.9.0" { inherit profileName; };
        serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
        serde_bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_bytes."0.11.5" { inherit profileName; };
        serde_cbor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_cbor."0.11.1" { inherit profileName; };
        serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.57" { inherit profileName; };
        serde_repr = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_repr."0.1.6" { profileName = "__noProfile"; };
        shell_words = rustPackages."registry+https://github.com/rust-lang/crates.io-index".shell-words."1.0.0" { inherit profileName; };
        signal_hook = rustPackages."registry+https://github.com/rust-lang/crates.io-index".signal-hook."0.1.16" { inherit profileName; };
        slog = rustPackages."registry+https://github.com/rust-lang/crates.io-index".slog."2.5.2" { inherit profileName; };
        slog_async = rustPackages."registry+https://github.com/rust-lang/crates.io-index".slog-async."2.5.0" { inherit profileName; };
        slog_term = rustPackages."registry+https://github.com/rust-lang/crates.io-index".slog-term."2.6.0" { inherit profileName; };
        sysinfo = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sysinfo."0.9.6" { inherit profileName; };
        tar = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tar."0.4.29" { inherit profileName; };
        tempfile = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tempfile."3.1.0" { inherit profileName; };
        thiserror = rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.20" { inherit profileName; };
        tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."0.2.22" { inherit profileName; };
        toml = rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml."0.5.6" { inherit profileName; };
        url = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."2.1.1" { inherit profileName; };
        walkdir = rustPackages."registry+https://github.com/rust-lang/crates.io-index".walkdir."2.3.1" { inherit profileName; };
        wasmparser = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasmparser."0.45.2" { inherit profileName; };
      };
      devDependencies = {
        env_logger = rustPackages."registry+https://github.com/rust-lang/crates.io-index".env_logger."0.6.2" { inherit profileName; };
        mockito = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mockito."0.27.0" { inherit profileName; };
        proptest = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proptest."0.9.6" { inherit profileName; };
        tempfile = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tempfile."3.1.0" { inherit profileName; };
      };
      buildDependencies = {
        flate2 = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".flate2."1.0.16" { profileName = "__noProfile"; };
        tar = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".tar."0.4.29" { profileName = "__noProfile"; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".dialoguer."0.6.2" = overridableMkRustCrate (
    profileName: rec {
      name = "dialoguer";
      version = "0.6.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f4aa86af7b19b40ef9cbef761ed411a49f0afa06b7b6dcd3dfe2f96a3c546138"; };
      dependencies = {
        console = rustPackages."registry+https://github.com/rust-lang/crates.io-index".console."0.11.3" { inherit profileName; };
        lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
        tempfile = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tempfile."3.1.0" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".diff."0.1.12" = overridableMkRustCrate (
    profileName: rec {
      name = "diff";
      version = "0.1.12";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "0e25ea47919b1560c4e3b7fe0aaab9becf5b84a10325ddf7db0f0ba5e1026499"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".difference."2.0.0" = overridableMkRustCrate (
    profileName: rec {
      name = "difference";
      version = "2.0.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "524cbf6897b527295dff137cec09ecf3a05f4fddffd7dfcd1585403449e74198"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".digest."0.8.1" = overridableMkRustCrate (
    profileName: rec {
      name = "digest";
      version = "0.8.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f3d0c8c8752312f9713efd397ff63acb9f85585afbf179282e720e7704954dd5"; };
      features = builtins.concatLists [
        [ "std" ]
      ];
      dependencies = {
        generic_array = rustPackages."registry+https://github.com/rust-lang/crates.io-index".generic-array."0.12.3" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".digest."0.9.0" = overridableMkRustCrate (
    profileName: rec {
      name = "digest";
      version = "0.9.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "d3dd60d1080a57a05ab032377049e0591415d2b31afd7028356dbf3cc6dcb066"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "std" ]
      ];
      dependencies = {
        generic_array = rustPackages."registry+https://github.com/rust-lang/crates.io-index".generic-array."0.14.4" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".dirs."1.0.5" = overridableMkRustCrate (
    profileName: rec {
      name = "dirs";
      version = "1.0.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "3fd78930633bd1c6e35c4b42b1df7b0cbc6bc191146e512bb3bedf243fcc3901"; };
      dependencies = {
        ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.74" { inherit profileName; };
        ${ if hostPlatform.parsed.kernel.name == "redox" then "redox_users" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_users."0.3.4" { inherit profileName; };
        ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".dirs."2.0.2" = overridableMkRustCrate (
    profileName: rec {
      name = "dirs";
      version = "2.0.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "13aea89a5c93364a98e9b37b2fa237effbb694d5cfe01c5b70941f7eb087d5e3"; };
      dependencies = {
        cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
        dirs_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".dirs-sys."0.3.5" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".dirs-sys."0.3.5" = overridableMkRustCrate (
    profileName: rec {
      name = "dirs-sys";
      version = "0.3.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8e93d7f5705de3e49895a2b5e0b8855a1c27f080192ae9c32a6432d50741a57a"; };
      dependencies = {
        ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.74" { inherit profileName; };
        ${ if hostPlatform.parsed.kernel.name == "redox" then "redox_users" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_users."0.3.4" { inherit profileName; };
        ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".doc-comment."0.3.3" = overridableMkRustCrate (
    profileName: rec {
      name = "doc-comment";
      version = "0.3.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "fea41bba32d969b513997752735605054bc0dfa92b4c56bf1189f2e174be7a10"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".docopt."1.1.0" = overridableMkRustCrate (
    profileName: rec {
      name = "docopt";
      version = "1.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "7f525a586d310c87df72ebcd98009e57f1cc030c8c268305287a476beb653969"; };
      dependencies = {
        lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
        regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.3.9" { inherit profileName; };
        serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
        strsim = rustPackages."registry+https://github.com/rust-lang/crates.io-index".strsim."0.9.3" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".downcast."0.10.0" = overridableMkRustCrate (
    profileName: rec {
      name = "downcast";
      version = "0.10.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "4bb454f0228b18c7f4c3b0ebbee346ed9c52e7443b0999cd543ff3571205701d"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".dtoa."0.4.6" = overridableMkRustCrate (
    profileName: rec {
      name = "dtoa";
      version = "0.4.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "134951f4028bdadb9b84baf4232681efbf277da25144b9b0ad65df75946c422b"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".either."1.6.0" = overridableMkRustCrate (
    profileName: rec {
      name = "either";
      version = "1.6.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "cd56b59865bce947ac5958779cfa508f6c3b9497cc762b7e24a12d11ccde2c4f"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "use_std" ]
      ];
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".ena."0.14.0" = overridableMkRustCrate (
    profileName: rec {
      name = "ena";
      version = "0.14.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "d7402b94a93c24e742487327a7cd839dc9d36fec9de9fb25b09f2dae459f36c3"; };
      dependencies = {
        log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".encode_unicode."0.3.6" = overridableMkRustCrate (
    profileName: rec {
      name = "encode_unicode";
      version = "0.3.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a357d28ed41a50f9c765dbfe56cbc04a64e53e5fc58ba79fbc34c10ef3df831f"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".encoding_rs."0.8.23" = overridableMkRustCrate (
    profileName: rec {
      name = "encoding_rs";
      version = "0.8.23";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e8ac63f94732332f44fe654443c46f6375d1939684c17b0afb6cb56b0456e171"; };
      dependencies = {
        cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".enum-as-inner."0.3.3" = overridableMkRustCrate (
    profileName: rec {
      name = "enum-as-inner";
      version = "0.3.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "7c5f0096a91d210159eceb2ff5e1c4da18388a170e1e3ce948aac9c8fdbbf595"; };
      dependencies = {
        heck = rustPackages."registry+https://github.com/rust-lang/crates.io-index".heck."0.3.1" { inherit profileName; };
        proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
        quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
        syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.38" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".env_logger."0.6.2" = overridableMkRustCrate (
    profileName: rec {
      name = "env_logger";
      version = "0.6.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "aafcde04e90a5226a6443b7aabdb016ba2f8307c847d524724bd9b346dd1a2d3"; };
      features = builtins.concatLists [
        [ "atty" ]
        [ "default" ]
        [ "humantime" ]
        [ "regex" ]
        [ "termcolor" ]
      ];
      dependencies = {
        atty = rustPackages."registry+https://github.com/rust-lang/crates.io-index".atty."0.2.14" { inherit profileName; };
        humantime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".humantime."1.3.0" { inherit profileName; };
        log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
        regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.3.9" { inherit profileName; };
        termcolor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".termcolor."1.1.0" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".erased-serde."0.3.12" = overridableMkRustCrate (
    profileName: rec {
      name = "erased-serde";
      version = "0.3.12";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "6ca8b296792113e1500fd935ae487be6e00ce318952a6880555554824d6ebf38"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".extend."0.1.2" = overridableMkRustCrate (
    profileName: rec {
      name = "extend";
      version = "0.1.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f47da3a72ec598d9c8937a7ebca8962a5c7a1f28444e38c2b33c771ba3f55f05"; };
      dependencies = {
        proc_macro_error = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro-error."1.0.4" { inherit profileName; };
        proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
        quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
        syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.38" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".failure."0.1.8" = overridableMkRustCrate (
    profileName: rec {
      name = "failure";
      version = "0.1.8";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "d32e9bd16cc02eae7db7ef620b392808b89f6a5e16bb3497d159c6b92a0f4f86"; };
      features = builtins.concatLists [
        [ "backtrace" ]
        [ "default" ]
        [ "derive" ]
        [ "failure_derive" ]
        [ "std" ]
      ];
      dependencies = {
        backtrace = rustPackages."registry+https://github.com/rust-lang/crates.io-index".backtrace."0.3.50" { inherit profileName; };
        failure_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".failure_derive."0.1.8" { profileName = "__noProfile"; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".failure_derive."0.1.8" = overridableMkRustCrate (
    profileName: rec {
      name = "failure_derive";
      version = "0.1.8";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "aa4da3c766cd7a0db8242e326e9e4e081edd567072893ed320008189715366a4"; };
      dependencies = {
        proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
        quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
        syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.38" { inherit profileName; };
        synstructure = rustPackages."registry+https://github.com/rust-lang/crates.io-index".synstructure."0.12.4" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".fake-simd."0.1.2" = overridableMkRustCrate (
    profileName: rec {
      name = "fake-simd";
      version = "0.1.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e88a8acf291dafb59c2d96e8f59828f3838bb1a70398823ade51a84de6a6deed"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".filetime."0.2.12" = overridableMkRustCrate (
    profileName: rec {
      name = "filetime";
      version = "0.2.12";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "3ed85775dcc68644b5c950ac06a2b23768d3bc9390464151aaf27136998dcf9e"; };
      dependencies = {
        cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
        ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.74" { inherit profileName; };
        ${ if hostPlatform.parsed.kernel.name == "redox" then "syscall" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.1.57" { inherit profileName; };
        ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".fixedbitset."0.2.0" = overridableMkRustCrate (
    profileName: rec {
      name = "fixedbitset";
      version = "0.2.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "37ab347416e802de484e4d03c7316c48f1ecb56574dfd4a46a80f173ce1de04d"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".flate2."1.0.16" = overridableMkRustCrate (
    profileName: rec {
      name = "flate2";
      version = "1.0.16";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "68c90b0fc46cf89d227cc78b40e494ff81287a92dd07631e5af0d06fe3cf885e"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "miniz_oxide" ]
        [ "rust_backend" ]
      ];
      dependencies = {
        cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
        crc32fast = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crc32fast."1.2.0" { inherit profileName; };
        libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.74" { inherit profileName; };
        miniz_oxide = rustPackages."registry+https://github.com/rust-lang/crates.io-index".miniz_oxide."0.4.0" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".float-cmp."0.8.0" = overridableMkRustCrate (
    profileName: rec {
      name = "float-cmp";
      version = "0.8.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e1267f4ac4f343772758f7b1bdcbe767c218bbab93bb432acbf5162bbf85a6c4"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "num-traits" ]
        [ "ratio" ]
      ];
      dependencies = {
        num_traits = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.12" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".fnv."1.0.7" = overridableMkRustCrate (
    profileName: rec {
      name = "fnv";
      version = "1.0.7";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".foreign-types."0.3.2" = overridableMkRustCrate (
    profileName: rec {
      name = "foreign-types";
      version = "0.3.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f6f339eb8adc052cd2ca78910fda869aefa38d22d5cb648e6485e4d3fc06f3b1"; };
      dependencies = {
        foreign_types_shared = rustPackages."registry+https://github.com/rust-lang/crates.io-index".foreign-types-shared."0.1.1" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".foreign-types-shared."0.1.1" = overridableMkRustCrate (
    profileName: rec {
      name = "foreign-types-shared";
      version = "0.1.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "00b0228411908ca8685dba7fc2cdd70ec9990a6e753e89b6ac91a84c40fbaf4b"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".fragile."0.3.0" = overridableMkRustCrate (
    profileName: rec {
      name = "fragile";
      version = "0.3.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "05f8140122fa0d5dcb9fc8627cfce2b37cc1500f752636d46ea28bc26785c2f9"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".fsevent."0.4.0" = overridableMkRustCrate (
    profileName: rec {
      name = "fsevent";
      version = "0.4.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "5ab7d1bd1bd33cc98b0889831b72da23c0aa4df9cec7e0702f46ecea04b35db6"; };
      dependencies = {
        bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
        fsevent_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fsevent-sys."2.0.1" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".fsevent-sys."2.0.1" = overridableMkRustCrate (
    profileName: rec {
      name = "fsevent-sys";
      version = "2.0.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f41b048a94555da0f42f1d632e2e19510084fb8e303b0daa2816e733fb3644a0"; };
      dependencies = {
        libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.74" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".fuchsia-cprng."0.1.1" = overridableMkRustCrate (
    profileName: rec {
      name = "fuchsia-cprng";
      version = "0.1.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a06f77d526c1a601b7c4cdd98f54b5eaabffc14d5f2f0296febdc7f357c6d3ba"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".fuchsia-zircon."0.3.3" = overridableMkRustCrate (
    profileName: rec {
      name = "fuchsia-zircon";
      version = "0.3.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "2e9763c69ebaae630ba35f74888db465e49e259ba1bc0eda7d06f4a067615d82"; };
      dependencies = {
        bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
        fuchsia_zircon_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fuchsia-zircon-sys."0.3.3" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".fuchsia-zircon-sys."0.3.3" = overridableMkRustCrate (
    profileName: rec {
      name = "fuchsia-zircon-sys";
      version = "0.3.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "3dcaa9ae7725d12cdb85b3ad99a434db70b468c09ded17e012d86b5c1010f7a7"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".futures."0.3.5" = overridableMkRustCrate (
    profileName: rec {
      name = "futures";
      version = "0.3.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "1e05b85ec287aac0dc34db7d4a569323df697f9c55b99b15d6b4ef8cde49f613"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "async-await" ]
        [ "default" ]
        [ "executor" ]
        [ "futures-executor" ]
        [ "std" ]
      ];
      dependencies = {
        futures_channel = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-channel."0.3.5" { inherit profileName; };
        futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.5" { inherit profileName; };
        futures_executor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-executor."0.3.5" { inherit profileName; };
        futures_io = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-io."0.3.5" { inherit profileName; };
        futures_sink = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-sink."0.3.5" { inherit profileName; };
        futures_task = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-task."0.3.5" { inherit profileName; };
        futures_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.5" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".futures-channel."0.3.5" = overridableMkRustCrate (
    profileName: rec {
      name = "futures-channel";
      version = "0.3.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f366ad74c28cca6ba456d95e6422883cfb4b252a83bed929c83abfdbbf2967d5"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "futures-sink" ]
        [ "sink" ]
        [ "std" ]
      ];
      dependencies = {
        futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.5" { inherit profileName; };
        futures_sink = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-sink."0.3.5" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.5" = overridableMkRustCrate (
    profileName: rec {
      name = "futures-core";
      version = "0.3.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "59f5fff90fd5d971f936ad674802482ba441b6f09ba5e15fd8b39145582ca399"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "std" ]
      ];
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".futures-executor."0.3.5" = overridableMkRustCrate (
    profileName: rec {
      name = "futures-executor";
      version = "0.3.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "10d6bb888be1153d3abeb9006b11b02cf5e9b209fda28693c31ae1e4e012e314"; };
      features = builtins.concatLists [
        [ "std" ]
      ];
      dependencies = {
        futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.5" { inherit profileName; };
        futures_task = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-task."0.3.5" { inherit profileName; };
        futures_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.5" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".futures-io."0.3.5" = overridableMkRustCrate (
    profileName: rec {
      name = "futures-io";
      version = "0.3.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "de27142b013a8e869c14957e6d2edeef89e97c289e69d042ee3a49acd8b51789"; };
      features = builtins.concatLists [
        [ "std" ]
      ];
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".futures-macro."0.3.5" = overridableMkRustCrate (
    profileName: rec {
      name = "futures-macro";
      version = "0.3.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "d0b5a30a4328ab5473878237c447333c093297bded83a4983d10f4deea240d39"; };
      dependencies = {
        proc_macro_hack = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro-hack."0.5.18" { profileName = "__noProfile"; };
        proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
        quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
        syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.38" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".futures-sink."0.3.5" = overridableMkRustCrate (
    profileName: rec {
      name = "futures-sink";
      version = "0.3.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "3f2032893cb734c7a05d85ce0cc8b8c4075278e93b24b66f9de99d6eb0fa8acc"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "std" ]
      ];
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".futures-task."0.3.5" = overridableMkRustCrate (
    profileName: rec {
      name = "futures-task";
      version = "0.3.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "bdb66b5f09e22019b1ab0830f7785bcea8e7a42148683f99214f73f8ec21a626"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "once_cell" ]
        [ "std" ]
      ];
      dependencies = {
        once_cell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.4.0" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.5" = overridableMkRustCrate (
    profileName: rec {
      name = "futures-util";
      version = "0.3.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8764574ff08b701a084482c3c7031349104b07ac897393010494beaa18ce32c6"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "async-await" ]
        [ "async-await-macro" ]
        [ "channel" ]
        [ "default" ]
        [ "futures-channel" ]
        [ "futures-io" ]
        [ "futures-macro" ]
        [ "futures-sink" ]
        [ "io" ]
        [ "memchr" ]
        [ "proc-macro-hack" ]
        [ "proc-macro-nested" ]
        [ "sink" ]
        [ "slab" ]
        [ "std" ]
      ];
      dependencies = {
        futures_channel = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-channel."0.3.5" { inherit profileName; };
        futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.5" { inherit profileName; };
        futures_io = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-io."0.3.5" { inherit profileName; };
        futures_macro = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-macro."0.3.5" { profileName = "__noProfile"; };
        futures_sink = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-sink."0.3.5" { inherit profileName; };
        futures_task = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-task."0.3.5" { inherit profileName; };
        memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.3.3" { inherit profileName; };
        pin_project = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project."0.4.23" { inherit profileName; };
        pin_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-utils."0.1.0" { inherit profileName; };
        proc_macro_hack = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro-hack."0.5.18" { profileName = "__noProfile"; };
        proc_macro_nested = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro-nested."0.1.6" { inherit profileName; };
        slab = rustPackages."registry+https://github.com/rust-lang/crates.io-index".slab."0.4.2" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".fxhash."0.2.1" = overridableMkRustCrate (
    profileName: rec {
      name = "fxhash";
      version = "0.2.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c31b6d751ae2c7f11320402d34e41349dd1016f8d5d45e48c4312bc8625af50c"; };
      dependencies = {
        byteorder = rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.3.4" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".generic-array."0.12.3" = overridableMkRustCrate (
    profileName: rec {
      name = "generic-array";
      version = "0.12.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c68f0274ae0e023facc3c97b2e00f076be70e254bc851d972503b328db79b2ec"; };
      dependencies = {
        typenum = rustPackages."registry+https://github.com/rust-lang/crates.io-index".typenum."1.12.0" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".generic-array."0.14.4" = overridableMkRustCrate (
    profileName: rec {
      name = "generic-array";
      version = "0.14.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "501466ecc8a30d1d3b7fc9229b122b2ce8ed6e9d9223f1138d4babb253e51817"; };
      dependencies = {
        typenum = rustPackages."registry+https://github.com/rust-lang/crates.io-index".typenum."1.12.0" { inherit profileName; };
      };
      buildDependencies = {
        version_check = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".version_check."0.9.2" { profileName = "__noProfile"; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".getrandom."0.1.14" = overridableMkRustCrate (
    profileName: rec {
      name = "getrandom";
      version = "0.1.14";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "7abc8dd8451921606d809ba32e95b6111925cd2906060d2dcc29c070220503eb"; };
      features = builtins.concatLists [
        [ "std" ]
      ];
      dependencies = {
        cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
        ${ if hostPlatform.isUnix || hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.74" { inherit profileName; };
        ${ if hostPlatform.parsed.kernel.name == "wasi" || hostPlatform.parsed.kernel.name == "wasi" then "wasi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasi."0.9.0+wasi-snapshot-preview1" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".gimli."0.22.0" = overridableMkRustCrate (
    profileName: rec {
      name = "gimli";
      version = "0.22.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "aaf91faf136cb47367fa430cd46e37a788775e7fa104f8b4bcb3861dc389b724"; };
      features = builtins.concatLists [
        [ "read" ]
      ];
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".h2."0.2.6" = overridableMkRustCrate (
    profileName: rec {
      name = "h2";
      version = "0.2.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "993f9e0baeed60001cf565546b0d3dbe6a6ad23f2bd31644a133c641eccf6d53"; };
      dependencies = {
        bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."0.5.6" { inherit profileName; };
        fnv = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fnv."1.0.7" { inherit profileName; };
        futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.5" { inherit profileName; };
        futures_sink = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-sink."0.3.5" { inherit profileName; };
        futures_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.5" { inherit profileName; };
        http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.1" { inherit profileName; };
        indexmap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."1.5.1" { inherit profileName; };
        slab = rustPackages."registry+https://github.com/rust-lang/crates.io-index".slab."0.4.2" { inherit profileName; };
        tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."0.2.22" { inherit profileName; };
        tokio_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-util."0.3.1" { inherit profileName; };
        tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".half."1.6.0" = overridableMkRustCrate (
    profileName: rec {
      name = "half";
      version = "1.6.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "d36fab90f82edc3c747f9d438e06cf0a491055896f2a279638bb5beed6c40177"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".hashbrown."0.8.2" = overridableMkRustCrate (
    profileName: rec {
      name = "hashbrown";
      version = "0.8.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e91b62f79061a0bc2e046024cb7ba44b08419ed238ecbd9adbd787434b9e8c25"; };
      features = builtins.concatLists [
        [ "raw" ]
      ];
      buildDependencies = {
        autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.0.0" { profileName = "__noProfile"; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".heck."0.3.1" = overridableMkRustCrate (
    profileName: rec {
      name = "heck";
      version = "0.3.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "20564e78d53d2bb135c343b3f47714a56af2061f1c928fdb541dc7b9fdd94205"; };
      dependencies = {
        unicode_segmentation = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-segmentation."1.6.0" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".hermit-abi."0.1.15" = overridableMkRustCrate (
    profileName: rec {
      name = "hermit-abi";
      version = "0.1.15";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "3deed196b6e7f9e44a2ae8d94225d80302d81208b1bb673fd21fe634645c85a9"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
      dependencies = {
        libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.74" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".hex."0.4.2" = overridableMkRustCrate (
    profileName: rec {
      name = "hex";
      version = "0.4.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "644f9158b2f133fd50f5fb3242878846d9eb792e445c893805ff0e3824006e35"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".hostname."0.3.1" = overridableMkRustCrate (
    profileName: rec {
      name = "hostname";
      version = "0.3.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "3c731c3e10504cc8ed35cfe2f1db4c9274c3d35fa486e3b31df46f068ef3e867"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
      dependencies = {
        ${ if hostPlatform.isUnix || hostPlatform.parsed.kernel.name == "redox" then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.74" { inherit profileName; };
        match_cfg = rustPackages."registry+https://github.com/rust-lang/crates.io-index".match_cfg."0.1.0" { inherit profileName; };
        ${ if hostPlatform.parsed.kernel.name == "windows" then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".hotwatch."0.4.3" = overridableMkRustCrate (
    profileName: rec {
      name = "hotwatch";
      version = "0.4.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ba0add391e9cd7d19c29024617a44df79c867ab003bce7f3224c1636595ec740"; };
      dependencies = {
        log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
        notify = rustPackages."registry+https://github.com/rust-lang/crates.io-index".notify."4.0.15" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".http."0.2.1" = overridableMkRustCrate (
    profileName: rec {
      name = "http";
      version = "0.2.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "28d569972648b2c512421b5f2a405ad6ac9666547189d0c5477a3f200f3e02f9"; };
      dependencies = {
        bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."0.5.6" { inherit profileName; };
        fnv = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fnv."1.0.7" { inherit profileName; };
        itoa = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."0.4.6" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".http-body."0.3.1" = overridableMkRustCrate (
    profileName: rec {
      name = "http-body";
      version = "0.3.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "13d5ff830006f7646652e057693569bfe0d51760c0085a071769d142a205111b"; };
      dependencies = {
        bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."0.5.6" { inherit profileName; };
        http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.1" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".httparse."1.3.4" = overridableMkRustCrate (
    profileName: rec {
      name = "httparse";
      version = "1.3.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "cd179ae861f0c2e53da70d892f5f3029f9594be0c41dc5269cd371691b1dc2f9"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".humanize-rs."0.1.5" = overridableMkRustCrate (
    profileName: rec {
      name = "humanize-rs";
      version = "0.1.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "016b02deb8b0c415d8d56a6f0ab265e50c22df61194e37f9be75ed3a722de8a6"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".humantime."1.3.0" = overridableMkRustCrate (
    profileName: rec {
      name = "humantime";
      version = "1.3.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "df004cfca50ef23c36850aaaa59ad52cc70d0e90243c3c7737a4dd32dc7a3c4f"; };
      dependencies = {
        quick_error = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quick-error."1.2.3" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".hyper."0.13.7" = overridableMkRustCrate (
    profileName: rec {
      name = "hyper";
      version = "0.13.7";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "3e68a8dd9716185d9e64ea473ea6ef63529252e3e27623295a0378a19665d5eb"; };
      features = builtins.concatLists [
        [ "socket2" ]
        [ "tcp" ]
      ];
      dependencies = {
        bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."0.5.6" { inherit profileName; };
        futures_channel = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-channel."0.3.5" { inherit profileName; };
        futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.5" { inherit profileName; };
        futures_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.5" { inherit profileName; };
        h2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".h2."0.2.6" { inherit profileName; };
        http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.1" { inherit profileName; };
        http_body = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http-body."0.3.1" { inherit profileName; };
        httparse = rustPackages."registry+https://github.com/rust-lang/crates.io-index".httparse."1.3.4" { inherit profileName; };
        itoa = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."0.4.6" { inherit profileName; };
        pin_project = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project."0.4.23" { inherit profileName; };
        socket2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".socket2."0.3.12" { inherit profileName; };
        time = rustPackages."registry+https://github.com/rust-lang/crates.io-index".time."0.1.43" { inherit profileName; };
        tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."0.2.22" { inherit profileName; };
        tower_service = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower-service."0.3.0" { inherit profileName; };
        tracing = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" { inherit profileName; };
        want = rustPackages."registry+https://github.com/rust-lang/crates.io-index".want."0.3.0" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".hyper-rustls."0.21.0" = overridableMkRustCrate (
    profileName: rec {
      name = "hyper-rustls";
      version = "0.21.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "37743cc83e8ee85eacfce90f2f4102030d9ff0a95244098d781e9bee4a90abb6"; };
      dependencies = {
        bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."0.5.6" { inherit profileName; };
        futures_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.5" { inherit profileName; };
        hyper = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hyper."0.13.7" { inherit profileName; };
        log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
        rustls = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustls."0.18.0" { inherit profileName; };
        tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."0.2.22" { inherit profileName; };
        tokio_rustls = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-rustls."0.14.0" { inherit profileName; };
        webpki = rustPackages."registry+https://github.com/rust-lang/crates.io-index".webpki."0.21.3" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".hyper-tls."0.4.3" = overridableMkRustCrate (
    profileName: rec {
      name = "hyper-tls";
      version = "0.4.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "d979acc56dcb5b8dddba3917601745e877576475aa046df3226eabdecef78eed"; };
      dependencies = {
        bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."0.5.6" { inherit profileName; };
        hyper = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hyper."0.13.7" { inherit profileName; };
        native_tls = rustPackages."registry+https://github.com/rust-lang/crates.io-index".native-tls."0.2.4" { inherit profileName; };
        tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."0.2.22" { inherit profileName; };
        tokio_tls = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-tls."0.3.1" { inherit profileName; };
      };
    }
  );

  "git+ssh://git@github.com/dfinity-lab/agent-rust.git".ic-agent."0.1.0" = overridableMkRustCrate (
    profileName: rec {
      name = "ic-agent";
      version = "0.1.0";
      registry = "git+ssh://git@github.com/dfinity-lab/agent-rust.git";
      src = fetchCrateGit {
        url = ssh://git@github.com/dfinity-lab/agent-rust.git;
        name = "ic-agent";
        version = "0.1.0";
        rev = "9d611f08cb55923fc6ff5bf0136e8f4b848dd2cc";
      };
      features = builtins.concatLists [
        [ "default" ]
        [ "pem" ]
      ];
      dependencies = {
        async_trait = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".async-trait."0.1.37" { profileName = "__noProfile"; };
        base32 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".base32."0.4.0" { inherit profileName; };
        base64 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64."0.12.3" { inherit profileName; };
        byteorder = rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.3.4" { inherit profileName; };
        candid = rustPackages."registry+https://github.com/rust-lang/crates.io-index".candid."0.6.0" { inherit profileName; };
        delay = rustPackages."registry+https://github.com/rust-lang/crates.io-index".delay."0.2.0" { inherit profileName; };
        hex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hex."0.4.2" { inherit profileName; };
        ic_types = rustPackages."git+ssh://git@github.com/dfinity-lab/agent-rust.git".ic-types."0.1.1" { inherit profileName; };
        leb128 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".leb128."0.2.4" { inherit profileName; };
        openssl = rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl."0.10.30" { inherit profileName; };
        pem = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pem."0.8.1" { inherit profileName; };
        rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.7.3" { inherit profileName; };
        reqwest = rustPackages."registry+https://github.com/rust-lang/crates.io-index".reqwest."0.10.7" { inherit profileName; };
        ring = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ring."0.16.15" { inherit profileName; };
        rustls = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustls."0.18.0" { inherit profileName; };
        serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
        serde_bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_bytes."0.11.5" { inherit profileName; };
        serde_cbor = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_cbor."0.11.1" { inherit profileName; };
        thiserror = rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.20" { inherit profileName; };
        url = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."2.1.1" { inherit profileName; };
        webpki_roots = rustPackages."registry+https://github.com/rust-lang/crates.io-index".webpki-roots."0.20.0" { inherit profileName; };
      };
    }
  );

  "git+ssh://git@github.com/dfinity-lab/agent-rust.git".ic-types."0.1.1" = overridableMkRustCrate (
    profileName: rec {
      name = "ic-types";
      version = "0.1.1";
      registry = "git+ssh://git@github.com/dfinity-lab/agent-rust.git";
      src = fetchCrateGit {
        url = ssh://git@github.com/dfinity-lab/agent-rust.git;
        name = "ic-types";
        version = "0.1.1";
        rev = "9d611f08cb55923fc6ff5bf0136e8f4b848dd2cc";
      };
      features = builtins.concatLists [
        [ "default" ]
        [ "serde" ]
      ];
      dependencies = {
        base32 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".base32."0.4.0" { inherit profileName; };
        crc32fast = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crc32fast."1.2.0" { inherit profileName; };
        serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
        sha2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sha2."0.9.1" { inherit profileName; };
        thiserror = rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.20" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".idna."0.2.0" = overridableMkRustCrate (
    profileName: rec {
      name = "idna";
      version = "0.2.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "02e2673c30ee86b5b96a9cb52ad15718aa1f966f5ab9ad54a8b95d5ca33120a9"; };
      dependencies = {
        matches = rustPackages."registry+https://github.com/rust-lang/crates.io-index".matches."0.1.8" { inherit profileName; };
        unicode_bidi = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-bidi."0.3.4" { inherit profileName; };
        unicode_normalization = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-normalization."0.1.13" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".indexmap."1.5.1" = overridableMkRustCrate (
    profileName: rec {
      name = "indexmap";
      version = "1.5.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "86b45e59b16c76b11bf9738fd5d38879d3bd28ad292d7b313608becb17ae2df9"; };
      dependencies = {
        hashbrown = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hashbrown."0.8.2" { inherit profileName; };
      };
      buildDependencies = {
        autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.0.0" { profileName = "__noProfile"; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".indicatif."0.13.0" = overridableMkRustCrate (
    profileName: rec {
      name = "indicatif";
      version = "0.13.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8572bccfb0665e70b7faf44ee28841b8e0823450cd4ad562a76b5a3c4bf48487"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
      dependencies = {
        console = rustPackages."registry+https://github.com/rust-lang/crates.io-index".console."0.12.0" { inherit profileName; };
        lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
        number_prefix = rustPackages."registry+https://github.com/rust-lang/crates.io-index".number_prefix."0.3.0" { inherit profileName; };
        regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.3.9" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".inotify."0.7.1" = overridableMkRustCrate (
    profileName: rec {
      name = "inotify";
      version = "0.7.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "4816c66d2c8ae673df83366c18341538f234a26d65a9ecea5c348b453ac1d02f"; };
      dependencies = {
        bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
        inotify_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".inotify-sys."0.1.3" { inherit profileName; };
        libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.74" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".inotify-sys."0.1.3" = overridableMkRustCrate (
    profileName: rec {
      name = "inotify-sys";
      version = "0.1.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e74a1aa87c59aeff6ef2cc2fa62d41bc43f54952f55652656b18a02fd5e356c0"; };
      dependencies = {
        libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.74" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".instant."0.1.6" = overridableMkRustCrate (
    profileName: rec {
      name = "instant";
      version = "0.1.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "5b141fdc7836c525d4d594027d318c84161ca17aaf8113ab1f81ab93ae897485"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".iovec."0.1.4" = overridableMkRustCrate (
    profileName: rec {
      name = "iovec";
      version = "0.1.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b2b3ea6ff95e175473f8ffe6a7eb7c00d054240321b84c57051175fe3c1e075e"; };
      dependencies = {
        ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.74" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".ipconfig."0.2.2" = overridableMkRustCrate (
    profileName: rec {
      name = "ipconfig";
      version = "0.2.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f7e2f18aece9709094573a9f24f483c4f65caa4298e2f7ae1b71cc65d853fad7"; };
      dependencies = {
        ${ if hostPlatform.isWindows then "socket2" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".socket2."0.3.12" { inherit profileName; };
        ${ if hostPlatform.isWindows then "widestring" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".widestring."0.4.2" { inherit profileName; };
        ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
        ${ if hostPlatform.isWindows then "winreg" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winreg."0.6.2" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".ipnet."2.3.0" = overridableMkRustCrate (
    profileName: rec {
      name = "ipnet";
      version = "2.3.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "47be2f14c678be2fdcab04ab1171db51b2762ce6f0a8ee87c8dd4a04ed216135"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".itertools."0.9.0" = overridableMkRustCrate (
    profileName: rec {
      name = "itertools";
      version = "0.9.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "284f18f85651fe11e8a991b2adb42cb078325c996ed026d994719efcfca1d54b"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "use_std" ]
      ];
      dependencies = {
        either = rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.6.0" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".itoa."0.4.6" = overridableMkRustCrate (
    profileName: rec {
      name = "itoa";
      version = "0.4.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "dc6f3ad7b9d11a0c00842ff8de1b60ee58661048eb8049ed33c73594f359d7e6"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".js-sys."0.3.44" = overridableMkRustCrate (
    profileName: rec {
      name = "js-sys";
      version = "0.3.44";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "85a7e2c92a4804dd459b86c339278d0fe87cf93757fae222c3fa3ae75458bc73"; };
      dependencies = {
        wasm_bindgen = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.67" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".kernel32-sys."0.2.2" = overridableMkRustCrate (
    profileName: rec {
      name = "kernel32-sys";
      version = "0.2.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "7507624b29483431c0ba2d82aece8ca6cdba9382bff4ddd0f7490560c056098d"; };
      dependencies = {
        winapi = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.2.8" { inherit profileName; };
      };
      buildDependencies = {
        build = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-build."0.1.1" { profileName = "__noProfile"; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".lalrpop."0.19.0" = overridableMkRustCrate (
    profileName: rec {
      name = "lalrpop";
      version = "0.19.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "d6f55673d283313791404be21209bb433f128f7e5c451986df107eb5fdbd68d2"; };
      dependencies = {
        ascii_canvas = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ascii-canvas."2.0.0" { inherit profileName; };
        atty = rustPackages."registry+https://github.com/rust-lang/crates.io-index".atty."0.2.14" { inherit profileName; };
        bit_set = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bit-set."0.5.2" { inherit profileName; };
        diff = rustPackages."registry+https://github.com/rust-lang/crates.io-index".diff."0.1.12" { inherit profileName; };
        docopt = rustPackages."registry+https://github.com/rust-lang/crates.io-index".docopt."1.1.0" { inherit profileName; };
        ena = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ena."0.14.0" { inherit profileName; };
        itertools = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itertools."0.9.0" { inherit profileName; };
        lalrpop_util = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lalrpop-util."0.19.0" { inherit profileName; };
        petgraph = rustPackages."registry+https://github.com/rust-lang/crates.io-index".petgraph."0.5.1" { inherit profileName; };
        regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.3.9" { inherit profileName; };
        regex_syntax = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.6.18" { inherit profileName; };
        serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
        serde_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.115" { profileName = "__noProfile"; };
        sha2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sha2."0.8.2" { inherit profileName; };
        string_cache = rustPackages."registry+https://github.com/rust-lang/crates.io-index".string_cache."0.8.0" { inherit profileName; };
        term = rustPackages."registry+https://github.com/rust-lang/crates.io-index".term."0.5.2" { inherit profileName; };
        unicode_xid = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-xid."0.2.1" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".lalrpop-util."0.19.0" = overridableMkRustCrate (
    profileName: rec {
      name = "lalrpop-util";
      version = "0.19.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f7e88f15a7d31dfa8fb607986819039127f0161058a3b248a146142d276cbd28"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".language-tags."0.2.2" = overridableMkRustCrate (
    profileName: rec {
      name = "language-tags";
      version = "0.2.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a91d884b6667cd606bb5a69aa0c99ba811a115fc68915e7056ec08a46e93199a"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".lazy-init."0.3.0" = overridableMkRustCrate (
    profileName: rec {
      name = "lazy-init";
      version = "0.3.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e71f2233af239a915476da8ee21a57331d82b9880c78220451ece7cb5862d313"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" = overridableMkRustCrate (
    profileName: rec {
      name = "lazy_static";
      version = "1.4.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".lazycell."1.3.0" = overridableMkRustCrate (
    profileName: rec {
      name = "lazycell";
      version = "1.3.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "830d08ce1d1d941e6b30645f1a0eb5643013d835ce3779a5fc208261dbe10f55"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".leb128."0.2.4" = overridableMkRustCrate (
    profileName: rec {
      name = "leb128";
      version = "0.2.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "3576a87f2ba00f6f106fdfcd16db1d698d648a26ad8e0573cad8537c3c362d2a"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".libc."0.2.74" = overridableMkRustCrate (
    profileName: rec {
      name = "libc";
      version = "0.2.74";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a2f02823cf78b754822df5f7f268fb59822e7296276d3e069d8e8cb26a14bd10"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".libflate."0.1.27" = overridableMkRustCrate (
    profileName: rec {
      name = "libflate";
      version = "0.1.27";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "d9135df43b1f5d0e333385cb6e7897ecd1a43d7d11b91ac003f4d2c2d2401fdd"; };
      dependencies = {
        adler32 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".adler32."1.2.0" { inherit profileName; };
        crc32fast = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crc32fast."1.2.0" { inherit profileName; };
        rle_decode_fast = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rle-decode-fast."1.0.1" { inherit profileName; };
        take_mut = rustPackages."registry+https://github.com/rust-lang/crates.io-index".take_mut."0.2.2" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".linked-hash-map."0.5.3" = overridableMkRustCrate (
    profileName: rec {
      name = "linked-hash-map";
      version = "0.5.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8dd5a6d5999d9907cda8ed67bbd137d3af8085216c2ac62de5be860bd41f304a"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".lock_api."0.3.4" = overridableMkRustCrate (
    profileName: rec {
      name = "lock_api";
      version = "0.3.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c4da24a77a3d8a6d4862d95f72e6fdb9c09a643ecdb402d754004a557f2bec75"; };
      dependencies = {
        scopeguard = rustPackages."registry+https://github.com/rust-lang/crates.io-index".scopeguard."1.1.0" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".lock_api."0.4.1" = overridableMkRustCrate (
    profileName: rec {
      name = "lock_api";
      version = "0.4.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "28247cc5a5be2f05fbcd76dd0cf2c7d3b5400cb978a28042abcd4fa0b3f8261c"; };
      dependencies = {
        scopeguard = rustPackages."registry+https://github.com/rust-lang/crates.io-index".scopeguard."1.1.0" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" = overridableMkRustCrate (
    profileName: rec {
      name = "log";
      version = "0.4.11";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "4fabed175da42fed1fa0746b0ea71f412aa9d35e76e95e59b192c64b9dc2bf8b"; };
      features = builtins.concatLists [
        [ "std" ]
      ];
      dependencies = {
        cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".logos."0.11.4" = overridableMkRustCrate (
    profileName: rec {
      name = "logos";
      version = "0.11.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b91c49573597a5d6c094f9031617bb1fed15c0db68c81e6546d313414ce107e4"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "export_derive" ]
        [ "logos-derive" ]
        [ "std" ]
      ];
      dependencies = {
        logos_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".logos-derive."0.11.5" { profileName = "__noProfile"; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".logos-derive."0.11.5" = overridableMkRustCrate (
    profileName: rec {
      name = "logos-derive";
      version = "0.11.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "797b1f8a0571b331c1b47e7db245af3dc634838da7a92b3bef4e30376ae1c347"; };
      dependencies = {
        beef = rustPackages."registry+https://github.com/rust-lang/crates.io-index".beef."0.4.4" { inherit profileName; };
        fnv = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fnv."1.0.7" { inherit profileName; };
        proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
        quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
        regex_syntax = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.6.18" { inherit profileName; };
        syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.38" { inherit profileName; };
        utf8_ranges = rustPackages."registry+https://github.com/rust-lang/crates.io-index".utf8-ranges."1.0.4" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".lru-cache."0.1.2" = overridableMkRustCrate (
    profileName: rec {
      name = "lru-cache";
      version = "0.1.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "31e24f1ad8321ca0e8a1e0ac13f23cb668e6f5466c2c57319f6a5cf1cc8e3b1c"; };
      dependencies = {
        linked_hash_map = rustPackages."registry+https://github.com/rust-lang/crates.io-index".linked-hash-map."0.5.3" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".match_cfg."0.1.0" = overridableMkRustCrate (
    profileName: rec {
      name = "match_cfg";
      version = "0.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ffbee8634e0d45d258acb448e7eaab3fce7a0a467395d4d9f228e3c1f01fb2e4"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "use_core" ]
      ];
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".matches."0.1.8" = overridableMkRustCrate (
    profileName: rec {
      name = "matches";
      version = "0.1.8";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "7ffc5c5338469d4d3ea17d269fa8ea3512ad247247c30bd2df69e68309ed0a08"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".maybe-uninit."2.0.0" = overridableMkRustCrate (
    profileName: rec {
      name = "maybe-uninit";
      version = "2.0.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "60302e4db3a61da70c0cb7991976248362f30319e88850c487b9b95bbf059e00"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".memchr."2.3.3" = overridableMkRustCrate (
    profileName: rec {
      name = "memchr";
      version = "2.3.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "3728d817d99e5ac407411fa471ff9800a778d88a24685968b36824eaf4bee400"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
        [ "use_std" ]
      ];
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".memoffset."0.5.5" = overridableMkRustCrate (
    profileName: rec {
      name = "memoffset";
      version = "0.5.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c198b026e1bbf08a937e94c6c60f9ec4a2267f5b0d2eec9c1b21b061ce2be55f"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
      buildDependencies = {
        autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.0.0" { profileName = "__noProfile"; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".mime."0.3.16" = overridableMkRustCrate (
    profileName: rec {
      name = "mime";
      version = "0.3.16";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "2a60c7ce501c71e03a9c9c0d35b861413ae925bd979cc7a4e30d060069aaac8d"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".mime_guess."2.0.3" = overridableMkRustCrate (
    profileName: rec {
      name = "mime_guess";
      version = "2.0.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "2684d4c2e97d99848d30b324b00c8fcc7e5c897b7cbb5819b09e7c90e8baf212"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "rev-mappings" ]
      ];
      dependencies = {
        mime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mime."0.3.16" { inherit profileName; };
        unicase = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicase."2.6.0" { inherit profileName; };
      };
      buildDependencies = {
        unicase = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".unicase."2.6.0" { profileName = "__noProfile"; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".miniz_oxide."0.4.0" = overridableMkRustCrate (
    profileName: rec {
      name = "miniz_oxide";
      version = "0.4.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "be0f75932c1f6cfae3c04000e40114adf955636e19040f9c0a2c380702aa1c7f"; };
      dependencies = {
        adler = rustPackages."registry+https://github.com/rust-lang/crates.io-index".adler."0.2.3" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".mio."0.6.22" = overridableMkRustCrate (
    profileName: rec {
      name = "mio";
      version = "0.6.22";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "fce347092656428bc8eaf6201042cb551b8d67855af7374542a92a0fbfcac430"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "with-deprecated" ]
      ];
      dependencies = {
        cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
        ${ if hostPlatform.parsed.kernel.name == "fuchsia" then "fuchsia_zircon" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fuchsia-zircon."0.3.3" { inherit profileName; };
        ${ if hostPlatform.parsed.kernel.name == "fuchsia" then "fuchsia_zircon_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fuchsia-zircon-sys."0.3.3" { inherit profileName; };
        iovec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".iovec."0.1.4" { inherit profileName; };
        ${ if hostPlatform.isWindows then "kernel32" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".kernel32-sys."0.2.2" { inherit profileName; };
        ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.74" { inherit profileName; };
        log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
        ${ if hostPlatform.isWindows then "miow" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".miow."0.2.1" { inherit profileName; };
        net2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".net2."0.2.34" { inherit profileName; };
        slab = rustPackages."registry+https://github.com/rust-lang/crates.io-index".slab."0.4.2" { inherit profileName; };
        ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.2.8" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".mio-extras."2.0.6" = overridableMkRustCrate (
    profileName: rec {
      name = "mio-extras";
      version = "2.0.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "52403fe290012ce777c4626790c8951324a2b9e3316b3143779c72b029742f19"; };
      dependencies = {
        lazycell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazycell."1.3.0" { inherit profileName; };
        log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
        mio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mio."0.6.22" { inherit profileName; };
        slab = rustPackages."registry+https://github.com/rust-lang/crates.io-index".slab."0.4.2" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".mio-uds."0.6.8" = overridableMkRustCrate (
    profileName: rec {
      name = "mio-uds";
      version = "0.6.8";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "afcb699eb26d4332647cc848492bbc15eafb26f08d0304550d5aa1f612e066f0"; };
      dependencies = {
        ${ if hostPlatform.isUnix then "iovec" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".iovec."0.1.4" { inherit profileName; };
        ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.74" { inherit profileName; };
        ${ if hostPlatform.isUnix then "mio" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mio."0.6.22" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".miow."0.2.1" = overridableMkRustCrate (
    profileName: rec {
      name = "miow";
      version = "0.2.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8c1f2f3b1cf331de6896aabf6e9d55dca90356cc9960cca7eaaf408a355ae919"; };
      dependencies = {
        kernel32 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".kernel32-sys."0.2.2" { inherit profileName; };
        net2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".net2."0.2.34" { inherit profileName; };
        winapi = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.2.8" { inherit profileName; };
        ws2_32 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ws2_32-sys."0.2.1" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".mockall."0.6.0" = overridableMkRustCrate (
    profileName: rec {
      name = "mockall";
      version = "0.6.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b95a7e7cfbce0e99ebbf5356a085d3b5e320a7ef300f77cd50a7148aa362e7c2"; };
      dependencies = {
        cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
        downcast = rustPackages."registry+https://github.com/rust-lang/crates.io-index".downcast."0.10.0" { inherit profileName; };
        fragile = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fragile."0.3.0" { inherit profileName; };
        lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
        mockall_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".mockall_derive."0.6.0" { profileName = "__noProfile"; };
        predicates = rustPackages."registry+https://github.com/rust-lang/crates.io-index".predicates."1.0.5" { inherit profileName; };
        predicates_tree = rustPackages."registry+https://github.com/rust-lang/crates.io-index".predicates-tree."1.0.0" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".mockall_derive."0.6.0" = overridableMkRustCrate (
    profileName: rec {
      name = "mockall_derive";
      version = "0.6.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "d5a615a1ad92048ad5d9633251edb7492b8abc057d7a679a9898476aef173935"; };
      dependencies = {
        cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
        proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
        quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
        syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.38" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".mockito."0.27.0" = overridableMkRustCrate (
    profileName: rec {
      name = "mockito";
      version = "0.27.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "3a634720d366bcbce30fb05871a35da229cef101ad0b2ea4e46cf5abf031a273"; };
      features = builtins.concatLists [
        [ "color" ]
        [ "colored" ]
        [ "default" ]
      ];
      dependencies = {
        assert_json_diff = rustPackages."registry+https://github.com/rust-lang/crates.io-index".assert-json-diff."1.1.0" { inherit profileName; };
        colored = rustPackages."registry+https://github.com/rust-lang/crates.io-index".colored."1.9.3" { inherit profileName; };
        difference = rustPackages."registry+https://github.com/rust-lang/crates.io-index".difference."2.0.0" { inherit profileName; };
        httparse = rustPackages."registry+https://github.com/rust-lang/crates.io-index".httparse."1.3.4" { inherit profileName; };
        lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
        log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
        rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.7.3" { inherit profileName; };
        regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.3.9" { inherit profileName; };
        serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.57" { inherit profileName; };
        serde_urlencoded = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_urlencoded."0.6.1" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".native-tls."0.2.4" = overridableMkRustCrate (
    profileName: rec {
      name = "native-tls";
      version = "0.2.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "2b0d88c06fe90d5ee94048ba40409ef1d9315d86f6f38c2efdaad4fb50c58b2d"; };
      dependencies = {
        ${ if hostPlatform.parsed.kernel.name == "darwin" || hostPlatform.parsed.kernel.name == "ios" then "lazy_static" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
        ${ if hostPlatform.parsed.kernel.name == "darwin" || hostPlatform.parsed.kernel.name == "ios" then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.74" { inherit profileName; };
        ${ if !(hostPlatform.parsed.kernel.name == "windows" || hostPlatform.parsed.kernel.name == "darwin" || hostPlatform.parsed.kernel.name == "ios") then "log" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
        ${ if !(hostPlatform.parsed.kernel.name == "windows" || hostPlatform.parsed.kernel.name == "darwin" || hostPlatform.parsed.kernel.name == "ios") then "openssl" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl."0.10.30" { inherit profileName; };
        ${ if !(hostPlatform.parsed.kernel.name == "windows" || hostPlatform.parsed.kernel.name == "darwin" || hostPlatform.parsed.kernel.name == "ios") then "openssl_probe" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl-probe."0.1.2" { inherit profileName; };
        ${ if !(hostPlatform.parsed.kernel.name == "windows" || hostPlatform.parsed.kernel.name == "darwin" || hostPlatform.parsed.kernel.name == "ios") then "openssl_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl-sys."0.9.58" { inherit profileName; };
        ${ if hostPlatform.parsed.kernel.name == "windows" then "schannel" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".schannel."0.1.19" { inherit profileName; };
        ${ if hostPlatform.parsed.kernel.name == "darwin" || hostPlatform.parsed.kernel.name == "ios" then "security_framework" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".security-framework."0.4.4" { inherit profileName; };
        ${ if hostPlatform.parsed.kernel.name == "darwin" || hostPlatform.parsed.kernel.name == "ios" then "security_framework_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".security-framework-sys."0.4.3" { inherit profileName; };
        ${ if hostPlatform.parsed.kernel.name == "darwin" || hostPlatform.parsed.kernel.name == "ios" then "tempfile" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tempfile."3.1.0" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".net2."0.2.34" = overridableMkRustCrate (
    profileName: rec {
      name = "net2";
      version = "0.2.34";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "2ba7c918ac76704fb42afcbbb43891e72731f3dcca3bef2a19786297baf14af7"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "duration" ]
      ];
      dependencies = {
        cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
        ${ if hostPlatform.parsed.kernel.name == "redox" || hostPlatform.isUnix || hostPlatform.parsed.kernel.name == "wasi" then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.74" { inherit profileName; };
        ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".new_debug_unreachable."1.0.4" = overridableMkRustCrate (
    profileName: rec {
      name = "new_debug_unreachable";
      version = "1.0.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e4a24736216ec316047a1fc4252e27dabb04218aa4a3f37c6e7ddbf1f9782b54"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".nom."4.2.3" = overridableMkRustCrate (
    profileName: rec {
      name = "nom";
      version = "4.2.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "2ad2a91a8e869eeb30b9cb3119ae87773a8f4ae617f41b1eb9c154b2905f7bd6"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.3.3" { inherit profileName; };
      };
      buildDependencies = {
        version_check = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".version_check."0.1.5" { profileName = "__noProfile"; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".normalize-line-endings."0.3.0" = overridableMkRustCrate (
    profileName: rec {
      name = "normalize-line-endings";
      version = "0.3.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "61807f77802ff30975e01f4f071c8ba10c022052f98b3294119f3e615d13e5be"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".notify."4.0.15" = overridableMkRustCrate (
    profileName: rec {
      name = "notify";
      version = "4.0.15";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "80ae4a7688d1fab81c5bf19c64fc8db920be8d519ce6336ed4e7efe024724dbd"; };
      dependencies = {
        bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
        filetime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".filetime."0.2.12" { inherit profileName; };
        ${ if hostPlatform.parsed.kernel.name == "darwin" then "fsevent" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fsevent."0.4.0" { inherit profileName; };
        ${ if hostPlatform.parsed.kernel.name == "darwin" then "fsevent_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fsevent-sys."2.0.1" { inherit profileName; };
        ${ if hostPlatform.parsed.kernel.name == "linux" then "inotify" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".inotify."0.7.1" { inherit profileName; };
        libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.74" { inherit profileName; };
        ${ if hostPlatform.parsed.kernel.name == "linux" then "mio" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mio."0.6.22" { inherit profileName; };
        ${ if hostPlatform.parsed.kernel.name == "linux" then "mio_extras" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mio-extras."2.0.6" { inherit profileName; };
        walkdir = rustPackages."registry+https://github.com/rust-lang/crates.io-index".walkdir."2.3.1" { inherit profileName; };
        ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".num-bigint."0.3.0" = overridableMkRustCrate (
    profileName: rec {
      name = "num-bigint";
      version = "0.3.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b7f3fc75e3697059fb1bc465e3d8cca6cf92f56854f201158b3f9c77d5a3cfa0"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        num_integer = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-integer."0.1.43" { inherit profileName; };
        num_traits = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.12" { inherit profileName; };
      };
      buildDependencies = {
        autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.0.0" { profileName = "__noProfile"; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".num-integer."0.1.43" = overridableMkRustCrate (
    profileName: rec {
      name = "num-integer";
      version = "0.1.43";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8d59457e662d541ba17869cf51cf177c0b5f0cbf476c66bdc90bf1edac4f875b"; };
      features = builtins.concatLists [
        [ "i128" ]
        [ "std" ]
      ];
      dependencies = {
        num_traits = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.12" { inherit profileName; };
      };
      buildDependencies = {
        autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.0.0" { profileName = "__noProfile"; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.12" = overridableMkRustCrate (
    profileName: rec {
      name = "num-traits";
      version = "0.2.12";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ac267bcc07f48ee5f8935ab0d24f316fb722d7a1292e2913f0cc196b29ffd611"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "i128" ]
        [ "std" ]
      ];
      buildDependencies = {
        autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.0.0" { profileName = "__noProfile"; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.13.0" = overridableMkRustCrate (
    profileName: rec {
      name = "num_cpus";
      version = "1.13.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "05499f3756671c15885fee9034446956fff3f243d6077b91e5767df161f766b3"; };
      dependencies = {
        ${ if (hostPlatform.parsed.cpu.name == "x86_64" || hostPlatform.parsed.cpu.name == "aarch64") && hostPlatform.parsed.kernel.name == "hermit" then "hermit_abi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hermit-abi."0.1.15" { inherit profileName; };
        libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.74" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".num_enum."0.5.1" = overridableMkRustCrate (
    profileName: rec {
      name = "num_enum";
      version = "0.5.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "226b45a5c2ac4dd696ed30fa6b94b057ad909c7b7fc2e0d0808192bced894066"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        derivative = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".derivative."2.1.1" { profileName = "__noProfile"; };
        num_enum_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".num_enum_derive."0.5.1" { profileName = "__noProfile"; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".num_enum_derive."0.5.1" = overridableMkRustCrate (
    profileName: rec {
      name = "num_enum_derive";
      version = "0.5.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "1c0fd9eba1d5db0994a239e09c1be402d35622277e35468ba891aa5e3188ce7e"; };
      features = builtins.concatLists [
        [ "proc-macro-crate" ]
        [ "std" ]
      ];
      dependencies = {
        proc_macro_crate = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro-crate."0.1.5" { inherit profileName; };
        proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
        quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
        syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.38" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".number_prefix."0.3.0" = overridableMkRustCrate (
    profileName: rec {
      name = "number_prefix";
      version = "0.3.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "17b02fc0ff9a9e4b35b3342880f48e896ebf69f2967921fe8646bf5b7125956a"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".object."0.20.0" = overridableMkRustCrate (
    profileName: rec {
      name = "object";
      version = "0.20.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "1ab52be62400ca80aa00285d25253d7f7c437b7375c4de678f5405d3afe82ca5"; };
      features = builtins.concatLists [
        [ "coff" ]
        [ "elf" ]
        [ "macho" ]
        [ "pe" ]
        [ "read_core" ]
        [ "unaligned" ]
      ];
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".once_cell."1.4.0" = overridableMkRustCrate (
    profileName: rec {
      name = "once_cell";
      version = "1.4.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "0b631f7e854af39a1739f401cf34a8a013dfe09eac4fa4dba91e9768bd28168d"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".opaque-debug."0.2.3" = overridableMkRustCrate (
    profileName: rec {
      name = "opaque-debug";
      version = "0.2.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "2839e79665f131bdb5782e51f2c6c9599c133c6098982a54c794358bf432529c"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".opaque-debug."0.3.0" = overridableMkRustCrate (
    profileName: rec {
      name = "opaque-debug";
      version = "0.3.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "624a8340c38c1b80fd549087862da4ba43e08858af025b236e509b6649fc13d5"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".openssl."0.10.30" = overridableMkRustCrate (
    profileName: rec {
      name = "openssl";
      version = "0.10.30";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8d575eff3665419f9b83678ff2815858ad9d11567e082f5ac1814baba4e2bcb4"; };
      dependencies = {
        bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
        cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
        foreign_types = rustPackages."registry+https://github.com/rust-lang/crates.io-index".foreign-types."0.3.2" { inherit profileName; };
        lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
        libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.74" { inherit profileName; };
        openssl_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl-sys."0.9.58" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".openssl-probe."0.1.2" = overridableMkRustCrate (
    profileName: rec {
      name = "openssl-probe";
      version = "0.1.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "77af24da69f9d9341038eba93a073b1fdaaa1b788221b00a69bce9e762cb32de"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".openssl-sys."0.9.58" = overridableMkRustCrate (
    profileName: rec {
      name = "openssl-sys";
      version = "0.9.58";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a842db4709b604f0fe5d1170ae3565899be2ad3d9cbc72dedc789ac0511f78de"; };
      dependencies = {
        libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.74" { inherit profileName; };
      };
      buildDependencies = {
        autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.0.0" { profileName = "__noProfile"; };
        cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.58" { profileName = "__noProfile"; };
        pkg_config = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".pkg-config."0.3.18" { profileName = "__noProfile"; };
        ${ if hostPlatform.parsed.abi.name == "msvc" then "vcpkg" else null } = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".vcpkg."0.2.10" { profileName = "__noProfile"; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.10.2" = overridableMkRustCrate (
    profileName: rec {
      name = "parking_lot";
      version = "0.10.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "d3a704eb390aafdc107b0e392f56a82b668e3a71366993b5340f5833fd62505e"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
      dependencies = {
        lock_api = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lock_api."0.3.4" { inherit profileName; };
        parking_lot_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot_core."0.7.2" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.11.0" = overridableMkRustCrate (
    profileName: rec {
      name = "parking_lot";
      version = "0.11.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a4893845fa2ca272e647da5d0e46660a314ead9c2fdd9a883aabc32e481a8733"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
      dependencies = {
        instant = rustPackages."registry+https://github.com/rust-lang/crates.io-index".instant."0.1.6" { inherit profileName; };
        lock_api = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lock_api."0.4.1" { inherit profileName; };
        parking_lot_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot_core."0.8.0" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".parking_lot_core."0.7.2" = overridableMkRustCrate (
    profileName: rec {
      name = "parking_lot_core";
      version = "0.7.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "d58c7c768d4ba344e3e8d72518ac13e259d7c7ade24167003b8488e10b6740a3"; };
      dependencies = {
        cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
        ${ if hostPlatform.parsed.kernel.name == "cloudabi" then "cloudabi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cloudabi."0.0.3" { inherit profileName; };
        ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.74" { inherit profileName; };
        ${ if hostPlatform.parsed.kernel.name == "redox" then "syscall" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.1.57" { inherit profileName; };
        smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.4.2" { inherit profileName; };
        ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".parking_lot_core."0.8.0" = overridableMkRustCrate (
    profileName: rec {
      name = "parking_lot_core";
      version = "0.8.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c361aa727dd08437f2f1447be8b59a33b0edd15e0fcee698f935613d9efbca9b"; };
      dependencies = {
        cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
        ${ if hostPlatform.parsed.kernel.name == "cloudabi" then "cloudabi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cloudabi."0.1.0" { inherit profileName; };
        instant = rustPackages."registry+https://github.com/rust-lang/crates.io-index".instant."0.1.6" { inherit profileName; };
        ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.74" { inherit profileName; };
        ${ if hostPlatform.parsed.kernel.name == "redox" then "syscall" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.1.57" { inherit profileName; };
        smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.4.2" { inherit profileName; };
        ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".paste."1.0.0" = overridableMkRustCrate (
    profileName: rec {
      name = "paste";
      version = "1.0.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f6ddc8e145de01d9180ac7b78b9676f95a9c2447f6a88b2c2a04702211bc5d71"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".pem."0.7.0" = overridableMkRustCrate (
    profileName: rec {
      name = "pem";
      version = "0.7.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a1581760c757a756a41f0ee3ff01256227bdf64cb752839779b95ffb01c59793"; };
      dependencies = {
        base64 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64."0.11.0" { inherit profileName; };
        lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
        regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.3.9" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".pem."0.8.1" = overridableMkRustCrate (
    profileName: rec {
      name = "pem";
      version = "0.8.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "59698ea79df9bf77104aefd39cc3ec990cb9693fb59c3b0a70ddf2646fdffb4b"; };
      dependencies = {
        base64 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64."0.12.3" { inherit profileName; };
        once_cell = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.4.0" { inherit profileName; };
        regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.3.9" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.1.0" = overridableMkRustCrate (
    profileName: rec {
      name = "percent-encoding";
      version = "2.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "d4fd5641d01c8f18a23da7b6fe29298ff4b55afcccdf78973b24cf3175fee32e"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".petgraph."0.5.1" = overridableMkRustCrate (
    profileName: rec {
      name = "petgraph";
      version = "0.5.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "467d164a6de56270bd7c4d070df81d07beace25012d5103ced4e9ff08d6afdb7"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "graphmap" ]
        [ "matrix_graph" ]
        [ "stable_graph" ]
      ];
      dependencies = {
        fixedbitset = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fixedbitset."0.2.0" { inherit profileName; };
        indexmap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."1.5.1" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".phf_shared."0.8.0" = overridableMkRustCrate (
    profileName: rec {
      name = "phf_shared";
      version = "0.8.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c00cf8b9eafe68dde5e9eaa2cef8ee84a9336a47d566ec55ca16589633b65af7"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        siphasher = rustPackages."registry+https://github.com/rust-lang/crates.io-index".siphasher."0.3.3" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".pin-project."0.4.23" = overridableMkRustCrate (
    profileName: rec {
      name = "pin-project";
      version = "0.4.23";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ca4433fff2ae79342e497d9f8ee990d174071408f28f726d6d83af93e58e48aa"; };
      dependencies = {
        pin_project_internal = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-internal."0.4.23" { profileName = "__noProfile"; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".pin-project-internal."0.4.23" = overridableMkRustCrate (
    profileName: rec {
      name = "pin-project-internal";
      version = "0.4.23";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "2c0e815c3ee9a031fdf5af21c10aa17c573c9c6a566328d99e3936c34e36461f"; };
      dependencies = {
        proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
        quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
        syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.38" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.1.7" = overridableMkRustCrate (
    profileName: rec {
      name = "pin-project-lite";
      version = "0.1.7";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "282adbf10f2698a7a77f8e983a74b2d18176c19a7fd32a45446139ae7b02b715"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".pin-utils."0.1.0" = overridableMkRustCrate (
    profileName: rec {
      name = "pin-utils";
      version = "0.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8b870d8c151b6f2fb93e84a13146138f05d02ed11c7e7c54f8826aaaf7c9f184"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".pkg-config."0.3.18" = overridableMkRustCrate (
    profileName: rec {
      name = "pkg-config";
      version = "0.3.18";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "d36492546b6af1463394d46f0c834346f31548646f6ba10849802c9c9a27ac33"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".ppv-lite86."0.2.8" = overridableMkRustCrate (
    profileName: rec {
      name = "ppv-lite86";
      version = "0.2.8";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "237a5ed80e274dbc66f86bd59c1e25edc039660be53194b5fe0a482e0f2612ea"; };
      features = builtins.concatLists [
        [ "simd" ]
        [ "std" ]
      ];
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".precomputed-hash."0.1.1" = overridableMkRustCrate (
    profileName: rec {
      name = "precomputed-hash";
      version = "0.1.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "925383efa346730478fb4838dbe9137d2a47675ad789c546d150a6e1dd4ab31c"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".predicates."1.0.5" = overridableMkRustCrate (
    profileName: rec {
      name = "predicates";
      version = "1.0.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "96bfead12e90dccead362d62bb2c90a5f6fc4584963645bc7f71a735e0b0735a"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "difference" ]
        [ "float-cmp" ]
        [ "normalize-line-endings" ]
        [ "regex" ]
      ];
      dependencies = {
        difference = rustPackages."registry+https://github.com/rust-lang/crates.io-index".difference."2.0.0" { inherit profileName; };
        float_cmp = rustPackages."registry+https://github.com/rust-lang/crates.io-index".float-cmp."0.8.0" { inherit profileName; };
        normalize_line_endings = rustPackages."registry+https://github.com/rust-lang/crates.io-index".normalize-line-endings."0.3.0" { inherit profileName; };
        predicates_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".predicates-core."1.0.0" { inherit profileName; };
        regex = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.3.9" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".predicates-core."1.0.0" = overridableMkRustCrate (
    profileName: rec {
      name = "predicates-core";
      version = "1.0.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "06075c3a3e92559ff8929e7a280684489ea27fe44805174c3ebd9328dcb37178"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".predicates-tree."1.0.0" = overridableMkRustCrate (
    profileName: rec {
      name = "predicates-tree";
      version = "1.0.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8e63c4859013b38a76eca2414c64911fba30def9e3202ac461a2d22831220124"; };
      dependencies = {
        predicates_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".predicates-core."1.0.0" { inherit profileName; };
        treeline = rustPackages."registry+https://github.com/rust-lang/crates.io-index".treeline."0.1.0" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".pretty."0.10.0" = overridableMkRustCrate (
    profileName: rec {
      name = "pretty";
      version = "0.10.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ad9940b913ee56ddd94aec2d3cd179dd47068236f42a1a6415ccf9d880ce2a61"; };
      dependencies = {
        arrayvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".arrayvec."0.5.1" { inherit profileName; };
        typed_arena = rustPackages."registry+https://github.com/rust-lang/crates.io-index".typed-arena."2.0.1" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".proc-macro-crate."0.1.5" = overridableMkRustCrate (
    profileName: rec {
      name = "proc-macro-crate";
      version = "0.1.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "1d6ea3c4595b96363c13943497db34af4460fb474a95c43f4446ad341b8c9785"; };
      dependencies = {
        toml = rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml."0.5.6" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".proc-macro-error."1.0.4" = overridableMkRustCrate (
    profileName: rec {
      name = "proc-macro-error";
      version = "1.0.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "syn" ]
        [ "syn-error" ]
      ];
      dependencies = {
        proc_macro_error_attr = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro-error-attr."1.0.4" { profileName = "__noProfile"; };
        proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
        quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
        syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.38" { inherit profileName; };
      };
      buildDependencies = {
        version_check = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".version_check."0.9.2" { profileName = "__noProfile"; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".proc-macro-error-attr."1.0.4" = overridableMkRustCrate (
    profileName: rec {
      name = "proc-macro-error-attr";
      version = "1.0.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a1be40180e52ecc98ad80b184934baf3d0d29f979574e439af5a55274b35f869"; };
      dependencies = {
        proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
        quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
      };
      buildDependencies = {
        version_check = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".version_check."0.9.2" { profileName = "__noProfile"; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".proc-macro-hack."0.5.18" = overridableMkRustCrate (
    profileName: rec {
      name = "proc-macro-hack";
      version = "0.5.18";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "99c605b9a0adc77b7211c6b1f722dcb613d68d66859a44f3d485a6da332b0598"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".proc-macro-nested."0.1.6" = overridableMkRustCrate (
    profileName: rec {
      name = "proc-macro-nested";
      version = "0.1.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "eba180dafb9038b050a4c280019bbedf9f2467b61e5d892dcad585bb57aadc5a"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" = overridableMkRustCrate (
    profileName: rec {
      name = "proc-macro2";
      version = "1.0.19";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "04f5f085b5d71e2188cb8271e5da0161ad52c3f227a661a3c135fdf28e258b12"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "proc-macro" ]
      ];
      dependencies = {
        unicode_xid = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-xid."0.2.1" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".proptest."0.9.6" = overridableMkRustCrate (
    profileName: rec {
      name = "proptest";
      version = "0.9.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "01c477819b845fe023d33583ebf10c9f62518c8d79a0960ba5c36d6ac8a55a5b"; };
      features = builtins.concatLists [
        [ "bit-set" ]
        [ "break-dead-code" ]
        [ "default" ]
        [ "fork" ]
        [ "lazy_static" ]
        [ "quick-error" ]
        [ "regex-syntax" ]
        [ "rusty-fork" ]
        [ "std" ]
        [ "tempfile" ]
        [ "timeout" ]
      ];
      dependencies = {
        bit_set = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bit-set."0.5.2" { inherit profileName; };
        bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
        byteorder = rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.3.4" { inherit profileName; };
        lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
        num_traits = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.12" { inherit profileName; };
        quick_error = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quick-error."1.2.3" { inherit profileName; };
        rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.6.5" { inherit profileName; };
        rand_chacha = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_chacha."0.1.1" { inherit profileName; };
        rand_xorshift = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_xorshift."0.1.1" { inherit profileName; };
        regex_syntax = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.6.18" { inherit profileName; };
        rusty_fork = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rusty-fork."0.2.2" { inherit profileName; };
        tempfile = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tempfile."3.1.0" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".quick-error."1.2.3" = overridableMkRustCrate (
    profileName: rec {
      name = "quick-error";
      version = "1.2.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a1d01941d82fa2ab50be1e79e6714289dd7cde78eba4c074bc5a4374f650dfe0"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" = overridableMkRustCrate (
    profileName: rec {
      name = "quote";
      version = "1.0.7";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "aa563d17ecb180e500da1cfd2b028310ac758de548efdd203e18f283af693f37"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "proc-macro" ]
      ];
      dependencies = {
        proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".rand."0.6.5" = overridableMkRustCrate (
    profileName: rec {
      name = "rand";
      version = "0.6.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "6d71dacdc3c88c1fde3885a3be3fbab9f35724e6ce99467f7d9c5026132184ca"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "i128_support" ]
        [ "rand_os" ]
        [ "std" ]
      ];
      dependencies = {
        ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.74" { inherit profileName; };
        rand_chacha = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_chacha."0.1.1" { inherit profileName; };
        rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.4.2" { inherit profileName; };
        rand_hc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_hc."0.1.0" { inherit profileName; };
        rand_isaac = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_isaac."0.1.1" { inherit profileName; };
        rand_jitter = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_jitter."0.1.4" { inherit profileName; };
        rand_os = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_os."0.1.3" { inherit profileName; };
        rand_pcg = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_pcg."0.1.2" { inherit profileName; };
        rand_xorshift = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_xorshift."0.1.1" { inherit profileName; };
        ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
      };
      buildDependencies = {
        autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."0.1.7" { profileName = "__noProfile"; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".rand."0.7.3" = overridableMkRustCrate (
    profileName: rec {
      name = "rand";
      version = "0.7.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "6a6b1679d49b24bbfe0c803429aa1874472f50d9b363131f0e89fc356b544d03"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "getrandom" ]
        [ "getrandom_package" ]
        [ "libc" ]
        [ "std" ]
      ];
      dependencies = {
        getrandom_package = rustPackages."registry+https://github.com/rust-lang/crates.io-index".getrandom."0.1.14" { inherit profileName; };
        ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.74" { inherit profileName; };
        ${ if !(hostPlatform.parsed.kernel.name == "emscripten") then "rand_chacha" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_chacha."0.2.2" { inherit profileName; };
        rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.5.1" { inherit profileName; };
        ${ if hostPlatform.parsed.kernel.name == "emscripten" then "rand_hc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_hc."0.2.0" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".rand_chacha."0.1.1" = overridableMkRustCrate (
    profileName: rec {
      name = "rand_chacha";
      version = "0.1.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "556d3a1ca6600bfcbab7c7c91ccb085ac7fbbcd70e008a98742e7847f4f7bcef"; };
      dependencies = {
        rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.3.1" { inherit profileName; };
      };
      buildDependencies = {
        autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."0.1.7" { profileName = "__noProfile"; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".rand_chacha."0.2.2" = overridableMkRustCrate (
    profileName: rec {
      name = "rand_chacha";
      version = "0.2.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f4c8ed856279c9737206bf725bf36935d8666ead7aa69b52be55af369d193402"; };
      features = builtins.concatLists [
        [ "std" ]
      ];
      dependencies = {
        ppv_lite86 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ppv-lite86."0.2.8" { inherit profileName; };
        rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.5.1" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".rand_core."0.3.1" = overridableMkRustCrate (
    profileName: rec {
      name = "rand_core";
      version = "0.3.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "7a6fdeb83b075e8266dcc8762c22776f6877a63111121f5f8c7411e5be7eed4b"; };
      dependencies = {
        rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.4.2" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".rand_core."0.4.2" = overridableMkRustCrate (
    profileName: rec {
      name = "rand_core";
      version = "0.4.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "9c33a3c44ca05fa6f1807d8e6743f3824e8509beca625669633be0acbdf509dc"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "std" ]
      ];
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".rand_core."0.5.1" = overridableMkRustCrate (
    profileName: rec {
      name = "rand_core";
      version = "0.5.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "90bde5296fc891b0cef12a6d03ddccc162ce7b2aff54160af9338f8d40df6d19"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "getrandom" ]
        [ "std" ]
      ];
      dependencies = {
        getrandom = rustPackages."registry+https://github.com/rust-lang/crates.io-index".getrandom."0.1.14" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".rand_hc."0.1.0" = overridableMkRustCrate (
    profileName: rec {
      name = "rand_hc";
      version = "0.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "7b40677c7be09ae76218dc623efbf7b18e34bced3f38883af07bb75630a21bc4"; };
      dependencies = {
        rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.3.1" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".rand_hc."0.2.0" = overridableMkRustCrate (
    profileName: rec {
      name = "rand_hc";
      version = "0.2.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ca3129af7b92a17112d59ad498c6f81eaf463253766b90396d39ea7a39d6613c"; };
      dependencies = {
        rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.5.1" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".rand_isaac."0.1.1" = overridableMkRustCrate (
    profileName: rec {
      name = "rand_isaac";
      version = "0.1.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ded997c9d5f13925be2a6fd7e66bf1872597f759fd9dd93513dd7e92e5a5ee08"; };
      dependencies = {
        rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.3.1" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".rand_jitter."0.1.4" = overridableMkRustCrate (
    profileName: rec {
      name = "rand_jitter";
      version = "0.1.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "1166d5c91dc97b88d1decc3285bb0a99ed84b05cfd0bc2341bdf2d43fc41e39b"; };
      features = builtins.concatLists [
        [ "std" ]
      ];
      dependencies = {
        ${ if hostPlatform.parsed.kernel.name == "darwin" || hostPlatform.parsed.kernel.name == "ios" then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.74" { inherit profileName; };
        rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.4.2" { inherit profileName; };
        ${ if hostPlatform.parsed.kernel.name == "windows" then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".rand_os."0.1.3" = overridableMkRustCrate (
    profileName: rec {
      name = "rand_os";
      version = "0.1.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "7b75f676a1e053fc562eafbb47838d67c84801e38fc1ba459e8f180deabd5071"; };
      dependencies = {
        ${ if hostPlatform.parsed.kernel.name == "cloudabi" then "cloudabi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cloudabi."0.0.3" { inherit profileName; };
        ${ if hostPlatform.parsed.kernel.name == "fuchsia" then "fuchsia_cprng" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fuchsia-cprng."0.1.1" { inherit profileName; };
        ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.74" { inherit profileName; };
        rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.4.2" { inherit profileName; };
        ${ if hostPlatform.parsed.abi.name == "sgx" then "rdrand" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rdrand."0.4.0" { inherit profileName; };
        ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".rand_pcg."0.1.2" = overridableMkRustCrate (
    profileName: rec {
      name = "rand_pcg";
      version = "0.1.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "abf9b09b01790cfe0364f52bf32995ea3c39f4d2dd011eac241d2914146d0b44"; };
      dependencies = {
        rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.4.2" { inherit profileName; };
      };
      buildDependencies = {
        autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."0.1.7" { profileName = "__noProfile"; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".rand_xorshift."0.1.1" = overridableMkRustCrate (
    profileName: rec {
      name = "rand_xorshift";
      version = "0.1.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "cbf7e9e623549b0e21f6e97cf8ecf247c1a8fd2e8a992ae265314300b2455d5c"; };
      dependencies = {
        rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.3.1" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".rayon."1.3.1" = overridableMkRustCrate (
    profileName: rec {
      name = "rayon";
      version = "1.3.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "62f02856753d04e03e26929f820d0a0a337ebe71f849801eea335d464b349080"; };
      dependencies = {
        crossbeam_deque = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-deque."0.7.3" { inherit profileName; };
        either = rustPackages."registry+https://github.com/rust-lang/crates.io-index".either."1.6.0" { inherit profileName; };
        rayon_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rayon-core."1.7.1" { inherit profileName; };
      };
      buildDependencies = {
        autocfg = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.0.0" { profileName = "__noProfile"; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".rayon-core."1.7.1" = overridableMkRustCrate (
    profileName: rec {
      name = "rayon-core";
      version = "1.7.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e92e15d89083484e11353891f1af602cc661426deb9564c298b270c726973280"; };
      dependencies = {
        crossbeam_deque = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-deque."0.7.3" { inherit profileName; };
        crossbeam_queue = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-queue."0.2.3" { inherit profileName; };
        crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.7.2" { inherit profileName; };
        lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
        num_cpus = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.13.0" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".rdrand."0.4.0" = overridableMkRustCrate (
    profileName: rec {
      name = "rdrand";
      version = "0.4.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "678054eb77286b51581ba43620cc911abf02758c91f93f479767aed0f90458b2"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        rand_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.3.1" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.1.57" = overridableMkRustCrate (
    profileName: rec {
      name = "redox_syscall";
      version = "0.1.57";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "41cc0f7e4d5d4544e8861606a285bb08d3e70712ccc7d2b84d7c0ccfaf4b05ce"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".redox_users."0.3.4" = overridableMkRustCrate (
    profileName: rec {
      name = "redox_users";
      version = "0.3.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "09b23093265f8d200fa7b4c2c76297f47e681c655f6f1285a8780d6a022f7431"; };
      dependencies = {
        getrandom = rustPackages."registry+https://github.com/rust-lang/crates.io-index".getrandom."0.1.14" { inherit profileName; };
        syscall = rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.1.57" { inherit profileName; };
        argon2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rust-argon2."0.7.0" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".regex."1.3.9" = overridableMkRustCrate (
    profileName: rec {
      name = "regex";
      version = "1.3.9";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "9c3780fcf44b193bc4d09f36d2a3c87b251da4a046c87795a0d35f4f927ad8e6"; };
      features = builtins.concatLists [
        [ "aho-corasick" ]
        [ "default" ]
        [ "memchr" ]
        [ "perf" ]
        [ "perf-cache" ]
        [ "perf-dfa" ]
        [ "perf-inline" ]
        [ "perf-literal" ]
        [ "std" ]
        [ "thread_local" ]
        [ "unicode" ]
        [ "unicode-age" ]
        [ "unicode-bool" ]
        [ "unicode-case" ]
        [ "unicode-gencat" ]
        [ "unicode-perl" ]
        [ "unicode-script" ]
        [ "unicode-segment" ]
      ];
      dependencies = {
        aho_corasick = rustPackages."registry+https://github.com/rust-lang/crates.io-index".aho-corasick."0.7.13" { inherit profileName; };
        memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.3.3" { inherit profileName; };
        regex_syntax = rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.6.18" { inherit profileName; };
        thread_local = rustPackages."registry+https://github.com/rust-lang/crates.io-index".thread_local."1.0.1" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.6.18" = overridableMkRustCrate (
    profileName: rec {
      name = "regex-syntax";
      version = "0.6.18";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "26412eb97c6b088a6997e05f69403a802a92d520de2f8e63c2b65f9e0f47c4e8"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "unicode" ]
        [ "unicode-age" ]
        [ "unicode-bool" ]
        [ "unicode-case" ]
        [ "unicode-gencat" ]
        [ "unicode-perl" ]
        [ "unicode-script" ]
        [ "unicode-segment" ]
      ];
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".remove_dir_all."0.5.3" = overridableMkRustCrate (
    profileName: rec {
      name = "remove_dir_all";
      version = "0.5.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "3acd125665422973a33ac9d3dd2df85edad0f4ae9b00dafb1a05e43a9f5ef8e7"; };
      dependencies = {
        ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".reqwest."0.10.7" = overridableMkRustCrate (
    profileName: rec {
      name = "reqwest";
      version = "0.10.7";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "12427a5577082c24419c9c417db35cfeb65962efc7675bb6b0d5f1f9d315bfe6"; };
      features = builtins.concatLists [
        [ "__tls" ]
        [ "blocking" ]
        [ "default" ]
        [ "default-tls" ]
        [ "hyper-rustls" ]
        [ "hyper-tls" ]
        [ "json" ]
        [ "native-tls-crate" ]
        [ "rustls" ]
        [ "rustls-tls" ]
        [ "serde_json" ]
        [ "tokio-rustls" ]
        [ "tokio-tls" ]
        [ "webpki-roots" ]
      ];
      dependencies = {
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "base64" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64."0.12.3" { inherit profileName; };
        bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."0.5.6" { inherit profileName; };
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "encoding_rs" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".encoding_rs."0.8.23" { inherit profileName; };
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "futures_core" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.5" { inherit profileName; };
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "futures_util" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.5" { inherit profileName; };
        http = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."0.2.1" { inherit profileName; };
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "http_body" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".http-body."0.3.1" { inherit profileName; };
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "hyper" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hyper."0.13.7" { inherit profileName; };
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "hyper_rustls" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hyper-rustls."0.21.0" { inherit profileName; };
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "hyper_tls" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hyper-tls."0.4.3" { inherit profileName; };
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "ipnet" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ipnet."2.3.0" { inherit profileName; };
        ${ if hostPlatform.parsed.cpu.name == "wasm32" then "js_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".js-sys."0.3.44" { inherit profileName; };
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "lazy_static" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "log" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "mime" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mime."0.3.16" { inherit profileName; };
        mime_guess = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mime_guess."2.0.3" { inherit profileName; };
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "native_tls_crate" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".native-tls."0.2.4" { inherit profileName; };
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "percent_encoding" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.1.0" { inherit profileName; };
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "pin_project_lite" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.1.7" { inherit profileName; };
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "rustls" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustls."0.18.0" { inherit profileName; };
        serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
        serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.57" { inherit profileName; };
        serde_urlencoded = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_urlencoded."0.6.1" { inherit profileName; };
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "tokio" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."0.2.22" { inherit profileName; };
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "tokio_rustls" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-rustls."0.14.0" { inherit profileName; };
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "tokio_tls" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-tls."0.3.1" { inherit profileName; };
        url = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."2.1.1" { inherit profileName; };
        ${ if hostPlatform.parsed.cpu.name == "wasm32" then "wasm_bindgen" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.67" { inherit profileName; };
        ${ if hostPlatform.parsed.cpu.name == "wasm32" then "wasm_bindgen_futures" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-futures."0.4.17" { inherit profileName; };
        ${ if hostPlatform.parsed.cpu.name == "wasm32" then "web_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".web-sys."0.3.44" { inherit profileName; };
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") then "webpki_roots" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".webpki-roots."0.19.0" { inherit profileName; };
        ${ if hostPlatform.isWindows then "winreg" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winreg."0.7.0" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".resolv-conf."0.6.3" = overridableMkRustCrate (
    profileName: rec {
      name = "resolv-conf";
      version = "0.6.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "11834e137f3b14e309437a8276714eed3a80d1ef894869e510f2c0c0b98b9f4a"; };
      features = builtins.concatLists [
        [ "hostname" ]
        [ "system" ]
      ];
      dependencies = {
        hostname = rustPackages."registry+https://github.com/rust-lang/crates.io-index".hostname."0.3.1" { inherit profileName; };
        quick_error = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quick-error."1.2.3" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".ring."0.16.15" = overridableMkRustCrate (
    profileName: rec {
      name = "ring";
      version = "0.16.15";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "952cd6b98c85bbc30efa1ba5783b8abf12fec8b3287ffa52605b9432313e34e4"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "dev_urandom_fallback" ]
        [ "once_cell" ]
        [ "std" ]
      ];
      dependencies = {
        ${ if hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "linux" || hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "linux" then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.74" { inherit profileName; };
        ${ if hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "freebsd" || hostPlatform.parsed.kernel.name == "linux" || hostPlatform.parsed.kernel.name == "netbsd" || hostPlatform.parsed.kernel.name == "openbsd" || hostPlatform.parsed.kernel.name == "solaris" || hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "freebsd" || hostPlatform.parsed.kernel.name == "linux" || hostPlatform.parsed.kernel.name == "netbsd" || hostPlatform.parsed.kernel.name == "openbsd" || hostPlatform.parsed.kernel.name == "solaris" then "once_cell" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.4.0" { inherit profileName; };
        ${ if (hostPlatform.parsed.cpu.name == "aarch64" || hostPlatform.parsed.cpu.name == "arm" || hostPlatform.parsed.cpu.name == "x86" || hostPlatform.parsed.cpu.name == "x86_64") && !(hostPlatform.parsed.kernel.name == "ios") || (hostPlatform.parsed.cpu.name == "aarch64" || hostPlatform.parsed.cpu.name == "arm" || hostPlatform.parsed.cpu.name == "x86" || hostPlatform.parsed.cpu.name == "x86_64") && !(hostPlatform.parsed.kernel.name == "ios") then "spin" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".spin."0.5.2" { inherit profileName; };
        untrusted = rustPackages."registry+https://github.com/rust-lang/crates.io-index".untrusted."0.7.1" { inherit profileName; };
        ${ if hostPlatform.parsed.cpu.name == "wasm32" && hostPlatform.parsed.vendor.name == "unknown" && hostPlatform.parsed.kernel.name == "unknown" && hostPlatform.parsed.abi.name == "" || hostPlatform.parsed.cpu.name == "wasm32" && hostPlatform.parsed.vendor.name == "unknown" && hostPlatform.parsed.kernel.name == "unknown" && hostPlatform.parsed.abi.name == "" then "web_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".web-sys."0.3.44" { inherit profileName; };
        ${ if hostPlatform.parsed.kernel.name == "windows" || hostPlatform.parsed.kernel.name == "windows" then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
      };
      buildDependencies = {
        cc = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.58" { profileName = "__noProfile"; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".rle-decode-fast."1.0.1" = overridableMkRustCrate (
    profileName: rec {
      name = "rle-decode-fast";
      version = "1.0.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "cabe4fa914dec5870285fa7f71f602645da47c486e68486d2b4ceb4a343e90ac"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".rust-argon2."0.7.0" = overridableMkRustCrate (
    profileName: rec {
      name = "rust-argon2";
      version = "0.7.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "2bc8af4bda8e1ff4932523b94d3dd20ee30a87232323eda55903ffd71d2fb017"; };
      dependencies = {
        base64 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64."0.11.0" { inherit profileName; };
        blake2b_simd = rustPackages."registry+https://github.com/rust-lang/crates.io-index".blake2b_simd."0.5.10" { inherit profileName; };
        constant_time_eq = rustPackages."registry+https://github.com/rust-lang/crates.io-index".constant_time_eq."0.1.5" { inherit profileName; };
        crossbeam_utils = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.7.2" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".rustc-demangle."0.1.16" = overridableMkRustCrate (
    profileName: rec {
      name = "rustc-demangle";
      version = "0.1.16";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "4c691c0e608126e00913e33f0ccf3727d5fc84573623b8d65b2df340b5201783"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".rustls."0.16.0" = overridableMkRustCrate (
    profileName: rec {
      name = "rustls";
      version = "0.16.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b25a18b1bf7387f0145e7f8324e700805aade3842dd3db2e74e4cdeb4677c09e"; };
      features = builtins.concatLists [
        [ "dangerous_configuration" ]
        [ "default" ]
        [ "log" ]
        [ "logging" ]
      ];
      dependencies = {
        base64 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64."0.10.1" { inherit profileName; };
        log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
        ring = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ring."0.16.15" { inherit profileName; };
        sct = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sct."0.6.0" { inherit profileName; };
        webpki = rustPackages."registry+https://github.com/rust-lang/crates.io-index".webpki."0.21.3" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".rustls."0.18.0" = overridableMkRustCrate (
    profileName: rec {
      name = "rustls";
      version = "0.18.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "cac94b333ee2aac3284c5b8a1b7fb4dd11cba88c244e3fe33cdbd047af0eb693"; };
      features = builtins.concatLists [
        [ "dangerous_configuration" ]
        [ "default" ]
        [ "log" ]
        [ "logging" ]
      ];
      dependencies = {
        base64 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64."0.12.3" { inherit profileName; };
        log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
        ring = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ring."0.16.15" { inherit profileName; };
        sct = rustPackages."registry+https://github.com/rust-lang/crates.io-index".sct."0.6.0" { inherit profileName; };
        webpki = rustPackages."registry+https://github.com/rust-lang/crates.io-index".webpki."0.21.3" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".rusty-fork."0.2.2" = overridableMkRustCrate (
    profileName: rec {
      name = "rusty-fork";
      version = "0.2.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "3dd93264e10c577503e926bd1430193eeb5d21b059148910082245309b424fae"; };
      features = builtins.concatLists [
        [ "timeout" ]
        [ "wait-timeout" ]
      ];
      dependencies = {
        fnv = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fnv."1.0.7" { inherit profileName; };
        quick_error = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quick-error."1.2.3" { inherit profileName; };
        tempfile = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tempfile."3.1.0" { inherit profileName; };
        wait_timeout = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wait-timeout."0.2.0" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".ryu."1.0.5" = overridableMkRustCrate (
    profileName: rec {
      name = "ryu";
      version = "1.0.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "71d301d4193d031abdd79ff7e3dd721168a9572ef3fe51a1517aba235bd8f86e"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".same-file."1.0.6" = overridableMkRustCrate (
    profileName: rec {
      name = "same-file";
      version = "1.0.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "93fc1dc3aaa9bfed95e02e6eadabb4baf7e3078b0bd1b4d7b6b0b68378900502"; };
      dependencies = {
        ${ if hostPlatform.isWindows then "winapi_util" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-util."0.1.5" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".schannel."0.1.19" = overridableMkRustCrate (
    profileName: rec {
      name = "schannel";
      version = "0.1.19";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8f05ba609c234e60bee0d547fe94a4c7e9da733d1c962cf6e59efa4cd9c8bc75"; };
      dependencies = {
        lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
        winapi = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".scopeguard."1.1.0" = overridableMkRustCrate (
    profileName: rec {
      name = "scopeguard";
      version = "1.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "d29ab0c6d3fc0ee92fe66e2d99f700eab17a8d57d1c1d3b748380fb20baa78cd"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".sct."0.6.0" = overridableMkRustCrate (
    profileName: rec {
      name = "sct";
      version = "0.6.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e3042af939fca8c3453b7af0f1c66e533a15a86169e39de2657310ade8f98d3c"; };
      dependencies = {
        ring = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ring."0.16.15" { inherit profileName; };
        untrusted = rustPackages."registry+https://github.com/rust-lang/crates.io-index".untrusted."0.7.1" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".security-framework."0.4.4" = overridableMkRustCrate (
    profileName: rec {
      name = "security-framework";
      version = "0.4.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "64808902d7d99f78eaddd2b4e2509713babc3dc3c85ad6f4c447680f3c01e535"; };
      dependencies = {
        bitflags = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.2.1" { inherit profileName; };
        core_foundation = rustPackages."registry+https://github.com/rust-lang/crates.io-index".core-foundation."0.7.0" { inherit profileName; };
        core_foundation_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".core-foundation-sys."0.7.0" { inherit profileName; };
        libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.74" { inherit profileName; };
        security_framework_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".security-framework-sys."0.4.3" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".security-framework-sys."0.4.3" = overridableMkRustCrate (
    profileName: rec {
      name = "security-framework-sys";
      version = "0.4.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "17bf11d99252f512695eb468de5516e5cf75455521e69dfe343f3b74e4748405"; };
      dependencies = {
        core_foundation_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".core-foundation-sys."0.7.0" { inherit profileName; };
        libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.74" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".semver."0.9.0" = overridableMkRustCrate (
    profileName: rec {
      name = "semver";
      version = "0.9.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "1d7eb9ef2c18661902cc47e535f9bc51b78acd254da71d375c2f6720d9a40403"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
      dependencies = {
        semver_parser = rustPackages."registry+https://github.com/rust-lang/crates.io-index".semver-parser."0.7.0" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".semver-parser."0.7.0" = overridableMkRustCrate (
    profileName: rec {
      name = "semver-parser";
      version = "0.7.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "388a1df253eca08550bef6c72392cfe7c30914bf41df5269b68cbd6ff8f570a3"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" = overridableMkRustCrate (
    profileName: rec {
      name = "serde";
      version = "1.0.115";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e54c9a88f2da7238af84b5101443f0c0d0a3bbdc455e34a5c9497b1903ed55d5"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "derive" ]
        [ "serde_derive" ]
        [ "std" ]
      ];
      dependencies = {
        serde_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.115" { profileName = "__noProfile"; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".serde_bytes."0.11.5" = overridableMkRustCrate (
    profileName: rec {
      name = "serde_bytes";
      version = "0.11.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "16ae07dd2f88a366f15bd0632ba725227018c69a1c8550a927324f8eb8368bb9"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".serde_cbor."0.11.1" = overridableMkRustCrate (
    profileName: rec {
      name = "serde_cbor";
      version = "0.11.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "1e18acfa2f90e8b735b2836ab8d538de304cbb6729a7360729ea5a895d15a622"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        half = rustPackages."registry+https://github.com/rust-lang/crates.io-index".half."1.6.0" { inherit profileName; };
        serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.115" = overridableMkRustCrate (
    profileName: rec {
      name = "serde_derive";
      version = "1.0.115";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "609feed1d0a73cc36a0182a840a9b37b4a82f0b1150369f0536a9e3f2a31dc48"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
      dependencies = {
        proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
        quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
        syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.38" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.57" = overridableMkRustCrate (
    profileName: rec {
      name = "serde_json";
      version = "1.0.57";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "164eacbdb13512ec2745fb09d51fd5b22b0d65ed294a1dcf7285a360c80a675c"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        itoa = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."0.4.6" { inherit profileName; };
        ryu = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ryu."1.0.5" { inherit profileName; };
        serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".serde_repr."0.1.6" = overridableMkRustCrate (
    profileName: rec {
      name = "serde_repr";
      version = "0.1.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "2dc6b7951b17b051f3210b063f12cc17320e2fe30ae05b0fe2a3abb068551c76"; };
      dependencies = {
        proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
        quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
        syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.38" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".serde_urlencoded."0.6.1" = overridableMkRustCrate (
    profileName: rec {
      name = "serde_urlencoded";
      version = "0.6.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "9ec5d77e2d4c73717816afac02670d5c4f534ea95ed430442cad02e7a6e32c97"; };
      dependencies = {
        dtoa = rustPackages."registry+https://github.com/rust-lang/crates.io-index".dtoa."0.4.6" { inherit profileName; };
        itoa = rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."0.4.6" { inherit profileName; };
        serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
        url = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."2.1.1" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".sha1."0.6.0" = overridableMkRustCrate (
    profileName: rec {
      name = "sha1";
      version = "0.6.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "2579985fda508104f7587689507983eadd6a6e84dd35d6d115361f530916fa0d"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".sha2."0.8.2" = overridableMkRustCrate (
    profileName: rec {
      name = "sha2";
      version = "0.8.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a256f46ea78a0c0d9ff00077504903ac881a1dafdc20da66545699e7776b3e69"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        block_buffer = rustPackages."registry+https://github.com/rust-lang/crates.io-index".block-buffer."0.7.3" { inherit profileName; };
        digest = rustPackages."registry+https://github.com/rust-lang/crates.io-index".digest."0.8.1" { inherit profileName; };
        fake_simd = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fake-simd."0.1.2" { inherit profileName; };
        opaque_debug = rustPackages."registry+https://github.com/rust-lang/crates.io-index".opaque-debug."0.2.3" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".sha2."0.9.1" = overridableMkRustCrate (
    profileName: rec {
      name = "sha2";
      version = "0.9.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "2933378ddfeda7ea26f48c555bdad8bb446bf8a3d17832dc83e380d444cfb8c1"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        block_buffer = rustPackages."registry+https://github.com/rust-lang/crates.io-index".block-buffer."0.9.0" { inherit profileName; };
        cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
        ${ if hostPlatform.parsed.cpu.name == "x86" || hostPlatform.parsed.cpu.name == "x86_64" then "cpuid_bool" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cpuid-bool."0.1.2" { inherit profileName; };
        digest = rustPackages."registry+https://github.com/rust-lang/crates.io-index".digest."0.9.0" { inherit profileName; };
        opaque_debug = rustPackages."registry+https://github.com/rust-lang/crates.io-index".opaque-debug."0.3.0" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".shell-words."1.0.0" = overridableMkRustCrate (
    profileName: rec {
      name = "shell-words";
      version = "1.0.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b6fa3938c99da4914afedd13bf3d79bcb6c277d1b2c398d23257a304d9e1b074"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".signal-hook."0.1.16" = overridableMkRustCrate (
    profileName: rec {
      name = "signal-hook";
      version = "0.1.16";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "604508c1418b99dfe1925ca9224829bb2a8a9a04dda655cc01fcad46f4ab05ed"; };
      dependencies = {
        libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.74" { inherit profileName; };
        signal_hook_registry = rustPackages."registry+https://github.com/rust-lang/crates.io-index".signal-hook-registry."1.2.1" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".signal-hook-registry."1.2.1" = overridableMkRustCrate (
    profileName: rec {
      name = "signal-hook-registry";
      version = "1.2.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a3e12110bc539e657a646068aaf5eb5b63af9d0c1f7b29c97113fad80e15f035"; };
      dependencies = {
        arc_swap = rustPackages."registry+https://github.com/rust-lang/crates.io-index".arc-swap."0.4.7" { inherit profileName; };
        libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.74" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".siphasher."0.3.3" = overridableMkRustCrate (
    profileName: rec {
      name = "siphasher";
      version = "0.3.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "fa8f3741c7372e75519bd9346068370c9cdaabcc1f9599cbcf2a2719352286b7"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".slab."0.4.2" = overridableMkRustCrate (
    profileName: rec {
      name = "slab";
      version = "0.4.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c111b5bd5695e56cffe5129854aa230b39c93a305372fdbb2668ca2394eea9f8"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".slog."2.5.2" = overridableMkRustCrate (
    profileName: rec {
      name = "slog";
      version = "2.5.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "1cc9c640a4adbfbcc11ffb95efe5aa7af7309e002adab54b185507dbf2377b99"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "max_level_trace" ]
        [ "std" ]
      ];
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".slog-async."2.5.0" = overridableMkRustCrate (
    profileName: rec {
      name = "slog-async";
      version = "2.5.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "51b3336ce47ce2f96673499fc07eb85e3472727b9a7a2959964b002c2ce8fbbb"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
      dependencies = {
        crossbeam_channel = rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-channel."0.4.3" { inherit profileName; };
        slog = rustPackages."registry+https://github.com/rust-lang/crates.io-index".slog."2.5.2" { inherit profileName; };
        take_mut = rustPackages."registry+https://github.com/rust-lang/crates.io-index".take_mut."0.2.2" { inherit profileName; };
        thread_local = rustPackages."registry+https://github.com/rust-lang/crates.io-index".thread_local."1.0.1" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".slog-term."2.6.0" = overridableMkRustCrate (
    profileName: rec {
      name = "slog-term";
      version = "2.6.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "bab1d807cf71129b05ce36914e1dbb6fbfbdecaf686301cb457f4fa967f9f5b6"; };
      dependencies = {
        atty = rustPackages."registry+https://github.com/rust-lang/crates.io-index".atty."0.2.14" { inherit profileName; };
        chrono = rustPackages."registry+https://github.com/rust-lang/crates.io-index".chrono."0.4.13" { inherit profileName; };
        slog = rustPackages."registry+https://github.com/rust-lang/crates.io-index".slog."2.5.2" { inherit profileName; };
        term = rustPackages."registry+https://github.com/rust-lang/crates.io-index".term."0.6.1" { inherit profileName; };
        thread_local = rustPackages."registry+https://github.com/rust-lang/crates.io-index".thread_local."1.0.1" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".smallvec."1.4.2" = overridableMkRustCrate (
    profileName: rec {
      name = "smallvec";
      version = "1.4.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "fbee7696b84bbf3d89a1c2eccff0850e3047ed46bfcd2e92c29a2d074d57e252"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".socket2."0.3.12" = overridableMkRustCrate (
    profileName: rec {
      name = "socket2";
      version = "0.3.12";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "03088793f677dce356f3ccc2edb1b314ad191ab702a5de3faf49304f7e104918"; };
      dependencies = {
        ${ if hostPlatform.isUnix || hostPlatform.parsed.kernel.name == "redox" then "cfg_if" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
        ${ if hostPlatform.isUnix || hostPlatform.parsed.kernel.name == "redox" then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.74" { inherit profileName; };
        ${ if hostPlatform.parsed.kernel.name == "redox" then "syscall" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.1.57" { inherit profileName; };
        ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".spin."0.5.2" = overridableMkRustCrate (
    profileName: rec {
      name = "spin";
      version = "0.5.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "6e63cff320ae2c57904679ba7cb63280a3dc4613885beafb148ee7bf9aa9042d"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".string_cache."0.8.0" = overridableMkRustCrate (
    profileName: rec {
      name = "string_cache";
      version = "0.8.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "2940c75beb4e3bf3a494cef919a747a2cb81e52571e212bfbd185074add7208a"; };
      dependencies = {
        lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
        debug_unreachable = rustPackages."registry+https://github.com/rust-lang/crates.io-index".new_debug_unreachable."1.0.4" { inherit profileName; };
        phf_shared = rustPackages."registry+https://github.com/rust-lang/crates.io-index".phf_shared."0.8.0" { inherit profileName; };
        precomputed_hash = rustPackages."registry+https://github.com/rust-lang/crates.io-index".precomputed-hash."0.1.1" { inherit profileName; };
        serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".strsim."0.8.0" = overridableMkRustCrate (
    profileName: rec {
      name = "strsim";
      version = "0.8.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8ea5119cdb4c55b55d432abb513a0429384878c15dde60cc77b1c99de1a95a6a"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".strsim."0.9.3" = overridableMkRustCrate (
    profileName: rec {
      name = "strsim";
      version = "0.9.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "6446ced80d6c486436db5c078dde11a9f73d42b57fb273121e160b84f63d894c"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".syn."1.0.38" = overridableMkRustCrate (
    profileName: rec {
      name = "syn";
      version = "1.0.38";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e69abc24912995b3038597a7a593be5053eb0fb44f3cc5beec0deb421790c1f4"; };
      features = builtins.concatLists [
        [ "clone-impls" ]
        [ "default" ]
        [ "derive" ]
        [ "extra-traits" ]
        [ "full" ]
        [ "parsing" ]
        [ "printing" ]
        [ "proc-macro" ]
        [ "quote" ]
        [ "visit" ]
        [ "visit-mut" ]
      ];
      dependencies = {
        proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
        quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
        unicode_xid = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-xid."0.2.1" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".synstructure."0.12.4" = overridableMkRustCrate (
    profileName: rec {
      name = "synstructure";
      version = "0.12.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b834f2d66f734cb897113e34aaff2f1ab4719ca946f9a7358dba8f8064148701"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "proc-macro" ]
      ];
      dependencies = {
        proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
        quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
        syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.38" { inherit profileName; };
        unicode_xid = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-xid."0.2.1" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".sysinfo."0.9.6" = overridableMkRustCrate (
    profileName: rec {
      name = "sysinfo";
      version = "0.9.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "6f4b2468c629cffba39c0a4425849ab3cdb03d9dfacba69684609aea04d08ff9"; };
      dependencies = {
        cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
        doc_comment = rustPackages."registry+https://github.com/rust-lang/crates.io-index".doc-comment."0.3.3" { inherit profileName; };
        ${ if !(hostPlatform.parsed.kernel.name == "unknown") then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.74" { inherit profileName; };
        rayon = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rayon."1.3.1" { inherit profileName; };
        ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".take_mut."0.2.2" = overridableMkRustCrate (
    profileName: rec {
      name = "take_mut";
      version = "0.2.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f764005d11ee5f36500a149ace24e00e3da98b0158b3e2d53a7495660d3f4d60"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".tar."0.4.29" = overridableMkRustCrate (
    profileName: rec {
      name = "tar";
      version = "0.4.29";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c8a4c1d0bee3230179544336c15eefb563cf0302955d962e456542323e8c2e8a"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "xattr" ]
      ];
      dependencies = {
        filetime = rustPackages."registry+https://github.com/rust-lang/crates.io-index".filetime."0.2.12" { inherit profileName; };
        ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.74" { inherit profileName; };
        ${ if hostPlatform.parsed.kernel.name == "redox" then "syscall" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.1.57" { inherit profileName; };
        ${ if hostPlatform.isUnix then "xattr" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".xattr."0.2.2" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".tempfile."3.1.0" = overridableMkRustCrate (
    profileName: rec {
      name = "tempfile";
      version = "3.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "7a6e24d9338a0a5be79593e2fa15a648add6138caa803e2d5bc782c371732ca9"; };
      dependencies = {
        cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
        ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.74" { inherit profileName; };
        rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.7.3" { inherit profileName; };
        ${ if hostPlatform.parsed.kernel.name == "redox" then "syscall" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.1.57" { inherit profileName; };
        remove_dir_all = rustPackages."registry+https://github.com/rust-lang/crates.io-index".remove_dir_all."0.5.3" { inherit profileName; };
        ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".term."0.5.2" = overridableMkRustCrate (
    profileName: rec {
      name = "term";
      version = "0.5.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "edd106a334b7657c10b7c540a0106114feadeb4dc314513e97df481d5d966f42"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
      dependencies = {
        byteorder = rustPackages."registry+https://github.com/rust-lang/crates.io-index".byteorder."1.3.4" { inherit profileName; };
        dirs = rustPackages."registry+https://github.com/rust-lang/crates.io-index".dirs."1.0.5" { inherit profileName; };
        ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".term."0.6.1" = overridableMkRustCrate (
    profileName: rec {
      name = "term";
      version = "0.6.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c0863a3345e70f61d613eab32ee046ccd1bcc5f9105fe402c61fcd0c13eeb8b5"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
      dependencies = {
        dirs = rustPackages."registry+https://github.com/rust-lang/crates.io-index".dirs."2.0.2" { inherit profileName; };
        ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".termcolor."1.1.0" = overridableMkRustCrate (
    profileName: rec {
      name = "termcolor";
      version = "1.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "bb6bfa289a4d7c5766392812c0a1f4c1ba45afa1ad47803c11e1f407d846d75f"; };
      dependencies = {
        ${ if hostPlatform.isWindows then "winapi_util" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-util."0.1.5" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".terminal_size."0.1.13" = overridableMkRustCrate (
    profileName: rec {
      name = "terminal_size";
      version = "0.1.13";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "9a14cd9f8c72704232f0bfc8455c0e861f0ad4eb60cc9ec8a170e231414c1e13"; };
      dependencies = {
        ${ if !hostPlatform.isWindows then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.74" { inherit profileName; };
        ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".termios."0.3.2" = overridableMkRustCrate (
    profileName: rec {
      name = "termios";
      version = "0.3.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "6f0fcee7b24a25675de40d5bb4de6e41b0df07bc9856295e7e2b3a3600c400c2"; };
      dependencies = {
        libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.74" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".textwrap."0.11.0" = overridableMkRustCrate (
    profileName: rec {
      name = "textwrap";
      version = "0.11.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "d326610f408c7a4eb6f51c37c330e496b08506c9457c9d34287ecc38809fb060"; };
      dependencies = {
        unicode_width = rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-width."0.1.8" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.20" = overridableMkRustCrate (
    profileName: rec {
      name = "thiserror";
      version = "1.0.20";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "7dfdd070ccd8ccb78f4ad66bf1982dc37f620ef696c6b5028fe2ed83dd3d0d08"; };
      dependencies = {
        thiserror_impl = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror-impl."1.0.20" { profileName = "__noProfile"; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".thiserror-impl."1.0.20" = overridableMkRustCrate (
    profileName: rec {
      name = "thiserror-impl";
      version = "1.0.20";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "bd80fc12f73063ac132ac92aceea36734f04a1d93c1240c6944e23a3b8841793"; };
      dependencies = {
        proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
        quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
        syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.38" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".thread_local."1.0.1" = overridableMkRustCrate (
    profileName: rec {
      name = "thread_local";
      version = "1.0.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "d40c6d1b69745a6ec6fb1ca717914848da4b44ae29d9b3080cbee91d72a69b14"; };
      dependencies = {
        lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".threadpool."1.8.1" = overridableMkRustCrate (
    profileName: rec {
      name = "threadpool";
      version = "1.8.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "d050e60b33d41c19108b32cea32164033a9013fe3b46cbd4457559bfbf77afaa"; };
      dependencies = {
        num_cpus = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.13.0" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".time."0.1.43" = overridableMkRustCrate (
    profileName: rec {
      name = "time";
      version = "0.1.43";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ca8a50ef2360fbd1eeb0ecd46795a87a19024eb4b53c5dc916ca1fd95fe62438"; };
      dependencies = {
        libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.74" { inherit profileName; };
        ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".tinyvec."0.3.3" = overridableMkRustCrate (
    profileName: rec {
      name = "tinyvec";
      version = "0.3.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "53953d2d3a5ad81d9f844a32f14ebb121f50b650cd59d0ee2a07cf13c617efed"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
      ];
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".tokio."0.2.22" = overridableMkRustCrate (
    profileName: rec {
      name = "tokio";
      version = "0.2.22";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "5d34ca54d84bf2b5b4d7d31e901a8464f7b60ac145a284fba25ceb801f2ddccd"; };
      features = builtins.concatLists [
        [ "blocking" ]
        [ "default" ]
        [ "fnv" ]
        [ "futures-core" ]
        [ "io-driver" ]
        [ "io-util" ]
        [ "iovec" ]
        [ "lazy_static" ]
        [ "libc" ]
        [ "memchr" ]
        [ "mio" ]
        [ "mio-uds" ]
        [ "num_cpus" ]
        [ "rt-core" ]
        [ "rt-threaded" ]
        [ "rt-util" ]
        [ "signal" ]
        [ "signal-hook-registry" ]
        [ "slab" ]
        [ "stream" ]
        [ "sync" ]
        [ "tcp" ]
        [ "time" ]
        [ "udp" ]
        [ "uds" ]
        [ "winapi" ]
      ];
      dependencies = {
        bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."0.5.6" { inherit profileName; };
        fnv = rustPackages."registry+https://github.com/rust-lang/crates.io-index".fnv."1.0.7" { inherit profileName; };
        futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.5" { inherit profileName; };
        iovec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".iovec."0.1.4" { inherit profileName; };
        lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
        ${ if hostPlatform.isUnix || hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.74" { inherit profileName; };
        memchr = rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.3.3" { inherit profileName; };
        mio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mio."0.6.22" { inherit profileName; };
        ${ if hostPlatform.isUnix || hostPlatform.isUnix then "mio_uds" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".mio-uds."0.6.8" { inherit profileName; };
        num_cpus = rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.13.0" { inherit profileName; };
        pin_project_lite = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.1.7" { inherit profileName; };
        ${ if hostPlatform.isUnix || hostPlatform.isUnix then "signal_hook_registry" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".signal-hook-registry."1.2.1" { inherit profileName; };
        slab = rustPackages."registry+https://github.com/rust-lang/crates.io-index".slab."0.4.2" { inherit profileName; };
        ${ if hostPlatform.isWindows || hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".tokio-openssl."0.4.0" = overridableMkRustCrate (
    profileName: rec {
      name = "tokio-openssl";
      version = "0.4.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "3c4b08c5f4208e699ede3df2520aca2e82401b2de33f45e96696a074480be594"; };
      dependencies = {
        openssl = rustPackages."registry+https://github.com/rust-lang/crates.io-index".openssl."0.10.30" { inherit profileName; };
        tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."0.2.22" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".tokio-rustls."0.12.3" = overridableMkRustCrate (
    profileName: rec {
      name = "tokio-rustls";
      version = "0.12.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "3068d891551949b37681724d6b73666787cc63fa8e255c812a41d2513aff9775"; };
      dependencies = {
        futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.5" { inherit profileName; };
        rustls = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustls."0.16.0" { inherit profileName; };
        tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."0.2.22" { inherit profileName; };
        webpki = rustPackages."registry+https://github.com/rust-lang/crates.io-index".webpki."0.21.3" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".tokio-rustls."0.14.0" = overridableMkRustCrate (
    profileName: rec {
      name = "tokio-rustls";
      version = "0.14.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "228139ddd4fea3fa345a29233009635235833e52807af7ea6448ead03890d6a9"; };
      dependencies = {
        futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.5" { inherit profileName; };
        rustls = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustls."0.18.0" { inherit profileName; };
        tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."0.2.22" { inherit profileName; };
        webpki = rustPackages."registry+https://github.com/rust-lang/crates.io-index".webpki."0.21.3" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".tokio-tls."0.3.1" = overridableMkRustCrate (
    profileName: rec {
      name = "tokio-tls";
      version = "0.3.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "9a70f4fcd7b3b24fb194f837560168208f669ca8cb70d0c4b862944452396343"; };
      dependencies = {
        native_tls = rustPackages."registry+https://github.com/rust-lang/crates.io-index".native-tls."0.2.4" { inherit profileName; };
        tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."0.2.22" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".tokio-util."0.2.0" = overridableMkRustCrate (
    profileName: rec {
      name = "tokio-util";
      version = "0.2.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "571da51182ec208780505a32528fc5512a8fe1443ab960b3f2f3ef093cd16930"; };
      features = builtins.concatLists [
        [ "codec" ]
        [ "default" ]
        [ "full" ]
        [ "udp" ]
      ];
      dependencies = {
        bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."0.5.6" { inherit profileName; };
        futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.5" { inherit profileName; };
        futures_sink = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-sink."0.3.5" { inherit profileName; };
        log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
        pin_project_lite = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.1.7" { inherit profileName; };
        tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."0.2.22" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".tokio-util."0.3.1" = overridableMkRustCrate (
    profileName: rec {
      name = "tokio-util";
      version = "0.3.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "be8242891f2b6cbef26a2d7e8605133c2c554cd35b3e4948ea892d6d68436499"; };
      features = builtins.concatLists [
        [ "codec" ]
        [ "default" ]
      ];
      dependencies = {
        bytes = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."0.5.6" { inherit profileName; };
        futures_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.5" { inherit profileName; };
        futures_sink = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-sink."0.3.5" { inherit profileName; };
        log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
        pin_project_lite = rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.1.7" { inherit profileName; };
        tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."0.2.22" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".toml."0.5.6" = overridableMkRustCrate (
    profileName: rec {
      name = "toml";
      version = "0.5.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ffc92d160b1eef40665be3a05630d003936a3bc7da7421277846c2613e92c71a"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
      dependencies = {
        serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".tower-service."0.3.0" = overridableMkRustCrate (
    profileName: rec {
      name = "tower-service";
      version = "0.3.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e987b6bf443f4b5b3b6f38704195592cca41c5bb7aedd3c3693c7081f8289860"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.19" = overridableMkRustCrate (
    profileName: rec {
      name = "tracing";
      version = "0.1.19";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "6d79ca061b032d6ce30c660fded31189ca0b9922bf483cd70759f13a2d86786c"; };
      features = builtins.concatLists [
        [ "log" ]
        [ "std" ]
      ];
      dependencies = {
        cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
        log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
        tracing_core = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-core."0.1.14" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".tracing-core."0.1.14" = overridableMkRustCrate (
    profileName: rec {
      name = "tracing-core";
      version = "0.1.14";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "db63662723c316b43ca36d833707cc93dff82a02ba3d7e354f342682cc8b3545"; };
      features = builtins.concatLists [
        [ "lazy_static" ]
        [ "std" ]
      ];
      dependencies = {
        lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".treeline."0.1.0" = overridableMkRustCrate (
    profileName: rec {
      name = "treeline";
      version = "0.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a7f741b240f1a48843f9b8e0444fb55fb2a4ff67293b50a9179dfd5ea67f8d41"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".trust-dns-proto."0.18.0-alpha.2" = overridableMkRustCrate (
    profileName: rec {
      name = "trust-dns-proto";
      version = "0.18.0-alpha.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "2a7f3a2ab8a919f5eca52a468866a67ed7d3efa265d48a652a9a3452272b413f"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "tokio" ]
        [ "tokio-compat" ]
      ];
      dependencies = {
        async_trait = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".async-trait."0.1.37" { profileName = "__noProfile"; };
        enum_as_inner = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".enum-as-inner."0.3.3" { profileName = "__noProfile"; };
        failure = rustPackages."registry+https://github.com/rust-lang/crates.io-index".failure."0.1.8" { inherit profileName; };
        futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.3.5" { inherit profileName; };
        idna = rustPackages."registry+https://github.com/rust-lang/crates.io-index".idna."0.2.0" { inherit profileName; };
        lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
        log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
        rand = rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.7.3" { inherit profileName; };
        smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.4.2" { inherit profileName; };
        socket2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".socket2."0.3.12" { inherit profileName; };
        tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."0.2.22" { inherit profileName; };
        url = rustPackages."registry+https://github.com/rust-lang/crates.io-index".url."2.1.1" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".trust-dns-resolver."0.18.0-alpha.2" = overridableMkRustCrate (
    profileName: rec {
      name = "trust-dns-resolver";
      version = "0.18.0-alpha.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "6f90b1502b226f8b2514c6d5b37bafa8c200d7ca4102d57dc36ee0f3b7a04a2f"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "tokio" ]
        [ "tokio-compat" ]
      ];
      dependencies = {
        cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
        failure = rustPackages."registry+https://github.com/rust-lang/crates.io-index".failure."0.1.8" { inherit profileName; };
        futures = rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.3.5" { inherit profileName; };
        ${ if hostPlatform.isWindows || hostPlatform.isWindows then "ipconfig" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ipconfig."0.2.2" { inherit profileName; };
        lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
        log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
        lru_cache = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lru-cache."0.1.2" { inherit profileName; };
        resolv_conf = rustPackages."registry+https://github.com/rust-lang/crates.io-index".resolv-conf."0.6.3" { inherit profileName; };
        smallvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.4.2" { inherit profileName; };
        tokio = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."0.2.22" { inherit profileName; };
        trust_dns_proto = rustPackages."registry+https://github.com/rust-lang/crates.io-index".trust-dns-proto."0.18.0-alpha.2" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".try-lock."0.2.3" = overridableMkRustCrate (
    profileName: rec {
      name = "try-lock";
      version = "0.2.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "59547bce71d9c38b83d9c0e92b6066c4253371f15005def0c30d9657f50c7642"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".typed-arena."2.0.1" = overridableMkRustCrate (
    profileName: rec {
      name = "typed-arena";
      version = "2.0.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "0685c84d5d54d1c26f7d3eb96cd41550adb97baed141a761cf335d3d33bcd0ae"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".typenum."1.12.0" = overridableMkRustCrate (
    profileName: rec {
      name = "typenum";
      version = "1.12.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "373c8a200f9e67a0c95e62a4f52fbf80c23b4381c05a17845531982fa99e6b33"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".unicase."2.6.0" = overridableMkRustCrate (
    profileName: rec {
      name = "unicase";
      version = "2.6.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "50f37be617794602aabbeee0be4f259dc1778fabe05e2d67ee8f79326d5cb4f6"; };
      buildDependencies = {
        version_check = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".version_check."0.9.2" { profileName = "__noProfile"; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".unicode-bidi."0.3.4" = overridableMkRustCrate (
    profileName: rec {
      name = "unicode-bidi";
      version = "0.3.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "49f2bd0c6468a8230e1db229cff8029217cf623c767ea5d60bfbd42729ea54d5"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
      dependencies = {
        matches = rustPackages."registry+https://github.com/rust-lang/crates.io-index".matches."0.1.8" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".unicode-normalization."0.1.13" = overridableMkRustCrate (
    profileName: rec {
      name = "unicode-normalization";
      version = "0.1.13";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "6fb19cf769fa8c6a80a162df694621ebeb4dafb606470b2b2fce0be40a98a977"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        tinyvec = rustPackages."registry+https://github.com/rust-lang/crates.io-index".tinyvec."0.3.3" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".unicode-segmentation."1.6.0" = overridableMkRustCrate (
    profileName: rec {
      name = "unicode-segmentation";
      version = "1.6.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e83e153d1053cbb5a118eeff7fd5be06ed99153f00dbcd8ae310c5fb2b22edc0"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".unicode-width."0.1.8" = overridableMkRustCrate (
    profileName: rec {
      name = "unicode-width";
      version = "0.1.8";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "9337591893a19b88d8d87f2cec1e73fad5cdfd10e5a6f349f498ad6ea2ffb1e3"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".unicode-xid."0.2.1" = overridableMkRustCrate (
    profileName: rec {
      name = "unicode-xid";
      version = "0.2.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f7fe0bb3479651439c9112f72b6c505038574c9fbb575ed1bf3b797fa39dd564"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".untrusted."0.7.1" = overridableMkRustCrate (
    profileName: rec {
      name = "untrusted";
      version = "0.7.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a156c684c91ea7d62626509bce3cb4e1d9ed5c4d978f7b4352658f96a4c26b4a"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".url."2.1.1" = overridableMkRustCrate (
    profileName: rec {
      name = "url";
      version = "2.1.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "829d4a8476c35c9bf0bbce5a3b23f4106f79728039b726d292bb93bc106787cb"; };
      dependencies = {
        idna = rustPackages."registry+https://github.com/rust-lang/crates.io-index".idna."0.2.0" { inherit profileName; };
        matches = rustPackages."registry+https://github.com/rust-lang/crates.io-index".matches."0.1.8" { inherit profileName; };
        percent_encoding = rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.1.0" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".utf8-ranges."1.0.4" = overridableMkRustCrate (
    profileName: rec {
      name = "utf8-ranges";
      version = "1.0.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b4ae116fef2b7fea257ed6440d3cfcff7f190865f170cdad00bb6465bf18ecba"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".v_escape."0.7.4" = overridableMkRustCrate (
    profileName: rec {
      name = "v_escape";
      version = "0.7.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "660b101c07b5d0863deb9e7fb3138777e858d6d2a79f9e6049a27d1cc77c6da6"; };
      dependencies = {
        v_escape_derive = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".v_escape_derive."0.5.6" { profileName = "__noProfile"; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".v_escape_derive."0.5.6" = overridableMkRustCrate (
    profileName: rec {
      name = "v_escape_derive";
      version = "0.5.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c2ca2a14bc3fc5b64d188b087a7d3a927df87b152e941ccfbc66672e20c467ae"; };
      dependencies = {
        nom = rustPackages."registry+https://github.com/rust-lang/crates.io-index".nom."4.2.3" { inherit profileName; };
        proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
        quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
        syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.38" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".v_htmlescape."0.4.5" = overridableMkRustCrate (
    profileName: rec {
      name = "v_htmlescape";
      version = "0.4.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e33e939c0d8cf047514fb6ba7d5aac78bc56677a6938b2ee67000b91f2e97e41"; };
      dependencies = {
        cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
        v_escape = rustPackages."registry+https://github.com/rust-lang/crates.io-index".v_escape."0.7.4" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".vcpkg."0.2.10" = overridableMkRustCrate (
    profileName: rec {
      name = "vcpkg";
      version = "0.2.10";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "6454029bf181f092ad1b853286f23e2c507d8e8194d01d92da4a55c274a5508c"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".vec_map."0.8.2" = overridableMkRustCrate (
    profileName: rec {
      name = "vec_map";
      version = "0.8.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f1bddf1187be692e79c5ffeab891132dfb0f236ed36a43c7ed39f1165ee20191"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".version_check."0.1.5" = overridableMkRustCrate (
    profileName: rec {
      name = "version_check";
      version = "0.1.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "914b1a6776c4c929a602fafd8bc742e06365d4bcbe48c30f9cca5824f70dc9dd"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".version_check."0.9.2" = overridableMkRustCrate (
    profileName: rec {
      name = "version_check";
      version = "0.9.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b5a972e5669d67ba988ce3dc826706fb0a8b01471c088cb0b6110b805cc36aed"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".wait-timeout."0.2.0" = overridableMkRustCrate (
    profileName: rec {
      name = "wait-timeout";
      version = "0.2.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "9f200f5b12eb75f8c1ed65abd4b2db8a6e1b138a20de009dacee265a2498f3f6"; };
      dependencies = {
        ${ if hostPlatform.isUnix then "libc" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.74" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".walkdir."2.3.1" = overridableMkRustCrate (
    profileName: rec {
      name = "walkdir";
      version = "2.3.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "777182bc735b6424e1a57516d35ed72cb8019d85c8c9bf536dccb3445c1a2f7d"; };
      dependencies = {
        same_file = rustPackages."registry+https://github.com/rust-lang/crates.io-index".same-file."1.0.6" { inherit profileName; };
        ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
        ${ if hostPlatform.isWindows then "winapi_util" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-util."0.1.5" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".want."0.3.0" = overridableMkRustCrate (
    profileName: rec {
      name = "want";
      version = "0.3.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "1ce8a968cb1cd110d136ff8b819a556d6fb6d919363c61534f6860c7eb172ba0"; };
      dependencies = {
        log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
        try_lock = rustPackages."registry+https://github.com/rust-lang/crates.io-index".try-lock."0.2.3" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".wasi."0.9.0+wasi-snapshot-preview1" = overridableMkRustCrate (
    profileName: rec {
      name = "wasi";
      version = "0.9.0+wasi-snapshot-preview1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "cccddf32554fecc6acb585f82a32a72e28b48f8c4c1883ddfeeeaa96f7d8e519"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.67" = overridableMkRustCrate (
    profileName: rec {
      name = "wasm-bindgen";
      version = "0.2.67";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f0563a9a4b071746dd5aedbc3a28c6fe9be4586fb3fbadb67c400d4f53c6b16c"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "serde" ]
        [ "serde-serialize" ]
        [ "serde_json" ]
        [ "spans" ]
        [ "std" ]
      ];
      dependencies = {
        cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
        serde = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.115" { inherit profileName; };
        serde_json = rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.57" { inherit profileName; };
        wasm_bindgen_macro = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-macro."0.2.67" { profileName = "__noProfile"; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-backend."0.2.67" = overridableMkRustCrate (
    profileName: rec {
      name = "wasm-bindgen-backend";
      version = "0.2.67";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "bc71e4c5efa60fb9e74160e89b93353bc24059999c0ae0fb03affc39770310b0"; };
      features = builtins.concatLists [
        [ "spans" ]
      ];
      dependencies = {
        bumpalo = rustPackages."registry+https://github.com/rust-lang/crates.io-index".bumpalo."3.4.0" { inherit profileName; };
        lazy_static = rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; };
        log = rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.11" { inherit profileName; };
        proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
        quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
        syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.38" { inherit profileName; };
        wasm_bindgen_shared = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-shared."0.2.67" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-futures."0.4.17" = overridableMkRustCrate (
    profileName: rec {
      name = "wasm-bindgen-futures";
      version = "0.4.17";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "95f8d235a77f880bcef268d379810ea6c0af2eacfa90b1ad5af731776e0c4699"; };
      dependencies = {
        cfg_if = rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."0.1.10" { inherit profileName; };
        js_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".js-sys."0.3.44" { inherit profileName; };
        wasm_bindgen = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.67" { inherit profileName; };
        ${ if builtins.elem "atomics" hostPlatformFeatures then "web_sys" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".web-sys."0.3.44" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-macro."0.2.67" = overridableMkRustCrate (
    profileName: rec {
      name = "wasm-bindgen-macro";
      version = "0.2.67";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "97c57cefa5fa80e2ba15641578b44d36e7a64279bc5ed43c6dbaf329457a2ed2"; };
      features = builtins.concatLists [
        [ "spans" ]
      ];
      dependencies = {
        quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
        wasm_bindgen_macro_support = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-macro-support."0.2.67" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-macro-support."0.2.67" = overridableMkRustCrate (
    profileName: rec {
      name = "wasm-bindgen-macro-support";
      version = "0.2.67";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "841a6d1c35c6f596ccea1f82504a192a60378f64b3bb0261904ad8f2f5657556"; };
      features = builtins.concatLists [
        [ "spans" ]
      ];
      dependencies = {
        proc_macro2 = rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.19" { inherit profileName; };
        quote = rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.7" { inherit profileName; };
        syn = rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.38" { inherit profileName; };
        wasm_bindgen_backend = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-backend."0.2.67" { inherit profileName; };
        wasm_bindgen_shared = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-shared."0.2.67" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-shared."0.2.67" = overridableMkRustCrate (
    profileName: rec {
      name = "wasm-bindgen-shared";
      version = "0.2.67";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "93b162580e34310e5931c4b792560108b10fd14d64915d7fff8ff00180e70092"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".wasmparser."0.45.2" = overridableMkRustCrate (
    profileName: rec {
      name = "wasmparser";
      version = "0.45.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8b4eab1d9971d0803729cba3617b56eb04fcb4bd25361cb63880ed41a42f20d5"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".web-sys."0.3.44" = overridableMkRustCrate (
    profileName: rec {
      name = "web-sys";
      version = "0.3.44";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "dda38f4e5ca63eda02c059d243aa25b5f35ab98451e518c51612cd0f1bd19a47"; };
      features = builtins.concatLists [
        [ "Blob" ]
        [ "BlobPropertyBag" ]
        [ "Crypto" ]
        [ "Event" ]
        [ "EventTarget" ]
        [ "FormData" ]
        [ "Headers" ]
        [ "MessageEvent" ]
        [ "Request" ]
        [ "RequestInit" ]
        [ "RequestMode" ]
        [ "Response" ]
        [ "Window" ]
        [ "Worker" ]
      ];
      dependencies = {
        js_sys = rustPackages."registry+https://github.com/rust-lang/crates.io-index".js-sys."0.3.44" { inherit profileName; };
        wasm_bindgen = rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.67" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".webpki."0.21.3" = overridableMkRustCrate (
    profileName: rec {
      name = "webpki";
      version = "0.21.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ab146130f5f790d45f82aeeb09e55a256573373ec64409fc19a6fb82fb1032ae"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
        [ "trust_anchor_util" ]
      ];
      dependencies = {
        ring = rustPackages."registry+https://github.com/rust-lang/crates.io-index".ring."0.16.15" { inherit profileName; };
        untrusted = rustPackages."registry+https://github.com/rust-lang/crates.io-index".untrusted."0.7.1" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".webpki-roots."0.17.0" = overridableMkRustCrate (
    profileName: rec {
      name = "webpki-roots";
      version = "0.17.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a262ae37dd9d60f60dd473d1158f9fbebf110ba7b6a5051c8160460f6043718b"; };
      dependencies = {
        webpki = rustPackages."registry+https://github.com/rust-lang/crates.io-index".webpki."0.21.3" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".webpki-roots."0.19.0" = overridableMkRustCrate (
    profileName: rec {
      name = "webpki-roots";
      version = "0.19.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f8eff4b7516a57307f9349c64bf34caa34b940b66fed4b2fb3136cb7386e5739"; };
      dependencies = {
        webpki = rustPackages."registry+https://github.com/rust-lang/crates.io-index".webpki."0.21.3" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".webpki-roots."0.20.0" = overridableMkRustCrate (
    profileName: rec {
      name = "webpki-roots";
      version = "0.20.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "0f20dea7535251981a9670857150d571846545088359b28e4951d350bdaf179f"; };
      dependencies = {
        webpki = rustPackages."registry+https://github.com/rust-lang/crates.io-index".webpki."0.21.3" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".widestring."0.4.2" = overridableMkRustCrate (
    profileName: rec {
      name = "widestring";
      version = "0.4.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a763e303c0e0f23b0da40888724762e802a8ffefbc22de4127ef42493c2ea68c"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "std" ]
      ];
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".winapi."0.2.8" = overridableMkRustCrate (
    profileName: rec {
      name = "winapi";
      version = "0.2.8";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "167dc9d6949a9b857f3451275e911c3f44255842c1f7a76f33c55103a909087a"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" = overridableMkRustCrate (
    profileName: rec {
      name = "winapi";
      version = "0.3.9";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419"; };
      features = builtins.concatLists [
        [ "consoleapi" ]
        [ "errhandlingapi" ]
        [ "fileapi" ]
        [ "handleapi" ]
        [ "impl-debug" ]
        [ "impl-default" ]
        [ "ioapiset" ]
        [ "knownfolders" ]
        [ "lmcons" ]
        [ "minschannel" ]
        [ "minwinbase" ]
        [ "minwindef" ]
        [ "ntdef" ]
        [ "ntsecapi" ]
        [ "ntstatus" ]
        [ "objbase" ]
        [ "pdh" ]
        [ "processenv" ]
        [ "profileapi" ]
        [ "psapi" ]
        [ "schannel" ]
        [ "securitybaseapi" ]
        [ "shlobj" ]
        [ "sspi" ]
        [ "std" ]
        [ "synchapi" ]
        [ "sysinfoapi" ]
        [ "timezoneapi" ]
        [ "tlhelp32" ]
        [ "winbase" ]
        [ "wincon" ]
        [ "wincrypt" ]
        [ "winerror" ]
        [ "winioctl" ]
        [ "winnt" ]
        [ "winreg" ]
        [ "winsock2" ]
        [ "winuser" ]
        [ "ws2def" ]
        [ "ws2ipdef" ]
        [ "ws2tcpip" ]
        [ "wtypesbase" ]
      ];
      dependencies = {
        ${ if hostPlatform.config == "i686-pc-windows-gnu" || hostPlatform.config == "i686-pc-windows-gnu" || hostPlatform.config == "i686-pc-windows-gnu" || hostPlatform.config == "i686-pc-windows-gnu" || hostPlatform.config == "i686-pc-windows-gnu" || hostPlatform.config == "i686-pc-windows-gnu" || hostPlatform.config == "i686-pc-windows-gnu" || hostPlatform.config == "i686-pc-windows-gnu" || hostPlatform.config == "i686-pc-windows-gnu" || hostPlatform.config == "i686-pc-windows-gnu" || hostPlatform.config == "i686-pc-windows-gnu" || hostPlatform.config == "i686-pc-windows-gnu" || hostPlatform.config == "i686-pc-windows-gnu" then "winapi_i686_pc_windows_gnu" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-i686-pc-windows-gnu."0.4.0" { inherit profileName; };
        ${ if hostPlatform.config == "x86_64-pc-windows-gnu" || hostPlatform.config == "x86_64-pc-windows-gnu" || hostPlatform.config == "x86_64-pc-windows-gnu" || hostPlatform.config == "x86_64-pc-windows-gnu" || hostPlatform.config == "x86_64-pc-windows-gnu" || hostPlatform.config == "x86_64-pc-windows-gnu" || hostPlatform.config == "x86_64-pc-windows-gnu" || hostPlatform.config == "x86_64-pc-windows-gnu" || hostPlatform.config == "x86_64-pc-windows-gnu" || hostPlatform.config == "x86_64-pc-windows-gnu" || hostPlatform.config == "x86_64-pc-windows-gnu" || hostPlatform.config == "x86_64-pc-windows-gnu" || hostPlatform.config == "x86_64-pc-windows-gnu" then "winapi_x86_64_pc_windows_gnu" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-x86_64-pc-windows-gnu."0.4.0" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".winapi-build."0.1.1" = overridableMkRustCrate (
    profileName: rec {
      name = "winapi-build";
      version = "0.1.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "2d315eee3b34aca4797b2da6b13ed88266e6d612562a0c46390af8299fc699bc"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".winapi-i686-pc-windows-gnu."0.4.0" = overridableMkRustCrate (
    profileName: rec {
      name = "winapi-i686-pc-windows-gnu";
      version = "0.4.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".winapi-util."0.1.5" = overridableMkRustCrate (
    profileName: rec {
      name = "winapi-util";
      version = "0.1.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "70ec6ce85bb158151cae5e5c87f95a8e97d2c0c4b001223f33a334e3ce5de178"; };
      dependencies = {
        ${ if hostPlatform.isWindows then "winapi" else null } = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".winapi-x86_64-pc-windows-gnu."0.4.0" = overridableMkRustCrate (
    profileName: rec {
      name = "winapi-x86_64-pc-windows-gnu";
      version = "0.4.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f"; };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".winreg."0.6.2" = overridableMkRustCrate (
    profileName: rec {
      name = "winreg";
      version = "0.6.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b2986deb581c4fe11b621998a5e53361efe6b48a151178d0cd9eeffa4dc6acc9"; };
      dependencies = {
        winapi = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".winreg."0.7.0" = overridableMkRustCrate (
    profileName: rec {
      name = "winreg";
      version = "0.7.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "0120db82e8a1e0b9fb3345a539c478767c0048d842860994d96113d5b667bd69"; };
      dependencies = {
        winapi = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".ws2_32-sys."0.2.1" = overridableMkRustCrate (
    profileName: rec {
      name = "ws2_32-sys";
      version = "0.2.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "d59cefebd0c892fa2dd6de581e937301d8552cb44489cdff035c6187cb63fa5e"; };
      dependencies = {
        winapi = rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.2.8" { inherit profileName; };
      };
      buildDependencies = {
        build = buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-build."0.1.1" { profileName = "__noProfile"; };
      };
    }
  );

  "registry+https://github.com/rust-lang/crates.io-index".xattr."0.2.2" = overridableMkRustCrate (
    profileName: rec {
      name = "xattr";
      version = "0.2.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "244c3741f4240ef46274860397c7c74e50eb23624996930e484c16679633a54c"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "unsupported" ]
      ];
      dependencies = {
        libc = rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.74" { inherit profileName; };
      };
    }
  );

}
